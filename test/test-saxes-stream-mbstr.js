const parseSax = require('../lib/utils/parse-sax');

let str = '';
let chunks = [[60, 116, 62]]; // <t>

str += 'abcdefg';
chunks = chunks.concat([[97, 98, 99], [100], [101, 102, 103]]);

str += 'αβγδεζηθικ';
chunks = chunks.concat([
  [206, 177, 206],
  [178, 206, 179, 206],
  [180, 206, 181, 206, 182],
  [206, 183, 206, 184, 206, 185],
  [206],
  [186],
]);

str += 'あいうえおかきくけこさしすせそたちつてと';
chunks = chunks.concat([
  [227, 129, 130, 227, 129, 132],
  [227, 129, 134, 227, 129, 136, 227],
  [129, 138, 227, 129, 139],
  [227, 129, 141, 227, 129, 143],
  [227, 129, 145, 227, 129, 147],
  [227, 129, 149, 227, 129, 151, 227],
  [129, 153, 227, 129, 155],
  [227, 129, 157, 227, 129, 159, 227],
  [129, 161, 227, 129, 164],
  [227],
  [129, 166],
  [227],
  [129],
  [168],
]);

str += '😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠';
chunks = chunks.concat([
  [240, 159, 152, 128, 240, 159, 152, 129],
  [240, 159, 152, 130, 240, 159, 152, 131, 240],
  [159, 152, 132, 240, 159, 152],
  [133, 240, 159, 152, 134, 240, 159, 152, 135],
  [240, 159, 152, 136, 240, 159],
  [152, 137, 240, 159, 152, 138, 240, 159],
  [152, 139, 240, 159, 152, 140, 240, 159, 152],
  [141, 240, 159, 152, 142, 240],
  [159, 152, 143, 240, 159, 152, 144, 240],
  [159, 152, 145, 240, 159, 152, 146],
  [240, 159, 152, 147, 240, 159, 152],
  [148, 240, 159, 152, 149, 240, 159, 152],
  [150, 240, 159, 152, 151, 240, 159, 152, 152],
  [240, 159, 152, 153, 240, 159],
  [152, 154, 240, 159, 152, 155, 240],
  [159, 152, 156, 240, 159, 152, 157],
  [240],
  [159],
  [152],
  [158],
  [240],
  [159, 152, 159],
  [240],
  [159, 152],
  [160],
]);

chunks = chunks.concat([[60, 47, 116, 62]]); // </t>

chunks = chunks.map(chunk => Buffer.from(chunk));

(async () => {
  const a = [];
  for await (const events of parseSax(chunks)) {
    events.forEach(({eventType, value}) => {
      if (eventType === 'text') {
        a.push(value);
      }
    });
  }
  return a.join('');
})()
  .then(rv => {
    if (rv === str) {
      console.log('SUCCESS');
    } else {
      console.log('FAILED');
      console.log('  expected:', str);
      console.log('    actual:', rv);
    }
  })
  .catch(err => {
    throw err;
  });
