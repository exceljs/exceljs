{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-reader.js"],"names":["events","require","Sax","_","utils","colCache","Dimensions","Row","Column","WorksheetReader","module","exports","workbook","id","name","_columns","_keys","_dimensions","inherits","EventEmitter","destroy","Error","dimensions","columns","getColumn","c","col","l2n","length","n","push","getColumnKey","key","setColumnKey","value","deleteColumnKey","eachColumnKey","f","each","_emitRow","row","emit","read","entry","options","emitSheet","emitHyperlinks","hyperlinks","worksheets","autodrain","sharedStrings","styles","properties","inCols","inRows","inHyperlinks","cols","current","parser","createStream","on","node","min","parseInt","attributes","max","width","parseFloat","styleId","style","r","ht","height","s","getStyleModel","ref","t","text","v","hyperlink","rId","fromModel","expandRow","address","decodeAddress","cell","getCell","formula","result","xmlDecode","index","sharedString","error","isDateFmt","numFmt","excelToDate","model","date1904","undefined","flowControl","createChild","pipe","sync"],"mappings":"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","file":"worksheet-reader.js","sourcesContent":["/**\n * Copyright (c) 2015-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar events = require('events');\nvar Sax = require('sax');\n\nvar _ = require('../../utils/under-dash');\nvar utils = require('../../utils/utils');\nvar colCache = require('../../utils/col-cache');\nvar Dimensions = require('../../doc/range');\n\nvar Row = require('../../doc/row');\nvar Column = require('../../doc/column');\n\nvar WorksheetReader = module.exports = function(workbook, id) {\n  this.workbook = workbook;\n  this.id = id;\n\n  // and a name\n  this.name = 'Sheet' + this.id;\n\n  // column definitions\n  this._columns = null;\n  this._keys = {};\n\n  // keep a record of dimensions\n  this._dimensions = new Dimensions();\n};\n\nutils.inherits(WorksheetReader, events.EventEmitter, {\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy: function() {\n    throw new Error('Invalid Operation: destroy');\n  },\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  },\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  },\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn: function(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      var col = this._keys[c];\n      if (col) { return col; }\n\n      // otherise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) { this._columns = []; }\n    if (c > this._columns.length) {\n      var n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  },\n\n  getColumnKey(key) {\n    return this._keys[key];\n  },\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  },\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  },\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  },\n\n  // =========================================================================\n  // Read\n\n  _emitRow: function(row) {\n    this.emit('row', row);\n  },\n\n  read: function(entry, options) {\n    var emitSheet = false;\n    var emitHyperlinks = false;\n    var hyperlinks = null;\n    switch (options.worksheets) {\n      case 'emit':\n        emitSheet = true;\n        break;\n      case 'prep':\n        break;\n      default:\n        break;\n    }\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n    if (!emitSheet && !emitHyperlinks && !hyperlinks) {\n      entry.autodrain();\n      this.emit('finished');\n      return;\n    }\n\n    // references\n    var sharedStrings = this.workbook.sharedStrings;\n    var styles = this.workbook.styles;\n    var properties = this.workbook.properties;\n\n    // xml position\n    var inCols = false;\n    var inRows = false;\n    var inHyperlinks = false;\n\n    // parse state\n    var cols = null;\n    var row = null;\n    var c = null;\n    var current = null;\n\n    var parser = Sax.createStream(true, {});\n    parser.on('opentag', node => {\n      if (emitSheet) {\n        switch (node.name) {\n          case 'cols':\n            inCols = true;\n            cols = [];\n            break;\n          case 'sheetData':\n            inRows = true;\n            break;\n\n          case 'col':\n            if (inCols) {\n              cols.push({\n                min: parseInt(node.attributes.min, 10),\n                max: parseInt(node.attributes.max, 10),\n                width: parseFloat(node.attributes.width),\n                styleId: parseInt(node.attributes.style || '0', 10)\n              });\n            }\n            break;\n\n          case 'row':\n            if (inRows) {\n              var r = parseInt(node.attributes.r, 10);\n              row = new Row(this, r);\n              if (node.attributes.ht) {\n                row.height = parseFloat(node.attributes.ht);\n              }\n              if (node.attributes.s) {\n                var styleId = parseInt(node.attributes.s, 10);\n                var style = styles.getStyleModel(styleId);\n                if (style) {\n                  row.style = style;\n                }\n              }\n            }\n            break;\n          case 'c':\n            if (row) {\n              c = {\n                ref: node.attributes.r,\n                s: parseInt(node.attributes.s, 10),\n                t: node.attributes.t\n              };\n            }\n            break;\n          case 'f':\n            if (c) {\n              current = c.f = { text: '' };\n            }\n            break;\n          case 'v':\n            if (c) {\n              current = c.v = { text: '' };\n            }\n            break;\n          case 'mergeCell':\n            break;\n          default:\n            break;\n        }\n      }\n\n\n      // =================================================================\n      //\n      if (emitHyperlinks || hyperlinks) {\n        switch (node.name) {\n          case 'hyperlinks':\n            inHyperlinks = true;\n            break;\n          case 'hyperlink':\n            if (inHyperlinks) {\n              var hyperlink = {\n                ref: node.attributes.ref,\n                rId: node.attributes['r:id']\n              };\n              if (emitHyperlinks) {\n                this.emit('hyperlink', hyperlink);\n              } else {\n                hyperlinks[hyperlink.ref] = hyperlink;\n              }\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    // only text data is for sheet values\n    parser.on('text', text => {\n      if (emitSheet) {\n        if (current) {\n          current.text += text;\n        }\n      }\n    });\n\n    parser.on('closetag', name => {\n      if (emitSheet) {\n        switch (name) {\n          case 'cols':\n            inCols = false;\n            this._columns = Column.fromModel(cols);\n            break;\n          case 'sheetData':\n            inRows = false;\n            break;\n\n          case 'row':\n            this._dimensions.expandRow(row);\n            this._emitRow(row);\n            row = null;\n            break;\n\n          case 'c':\n            if (row && c) {\n              var address = colCache.decodeAddress(c.ref);\n              var cell = row.getCell(address.col);\n              if (c.s) {\n                var style = styles.getStyleModel(c.s);\n                if (style) {\n                  cell.style = style;\n                }\n              }\n\n              if (c.f) {\n                var value = {\n                  formula: c.f.text\n                };\n                if (c.v) {\n                  if (c.t === 'str') {\n                    value.result = utils.xmlDecode(c.v.text);\n                  } else {\n                    value.result = parseFloat(c.v.text);\n                  }\n                }\n                cell.value = value;\n              } else if (c.v) {\n                switch (c.t) {\n                  case 's':\n                    var index = parseInt(c.v.text, 10);\n                    if (sharedStrings) {\n                      cell.value = sharedStrings[index];\n                    } else {\n                      cell.value = {\n                        sharedString: index\n                      };\n                    }\n                    break;\n                  case 'str':\n                    cell.value = utils.xmlDecode(c.v.text);\n                    break;\n                  case 'e':\n                    cell.value = { error: c.v.text };\n                    break;\n                  case 'b':\n                    cell.value = parseInt(c.v.text, 10) !== 0;\n                    break;\n                  default:\n                    if (utils.isDateFmt(cell.numFmt)) {\n                      cell.value = utils.excelToDate(parseFloat(c.v.text), properties.model.date1904);\n                    } else {\n                      cell.value = parseFloat(c.v.text);\n                    }\n                    break;\n                }\n              }\n              if (hyperlinks) {\n                var hyperlink = hyperlinks[c.ref];\n                if (hyperlink) {\n                  cell.text = cell.value;\n                  cell.value = undefined;\n                  cell.hyperlink = hyperlink;\n                }\n              }\n              c = null;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n      if (emitHyperlinks || hyperlinks) {\n        switch (name) {\n          case 'hyperlinks':\n            inHyperlinks = false;\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    parser.on('error', error => {\n      this.emit('error', error);\n    });\n    parser.on('end', () => {\n      this.emit('finished');\n    });\n\n    // create a down-stream flow-control to regulate the stream\n    var flowControl = this.workbook.flowControl.createChild();\n    flowControl.pipe(parser, {sync: true});\n    entry.pipe(flowControl);\n  }\n});\n"]}