{"version":3,"sources":["../../../lib/csv/csv.js"],"names":["fs","require","csv","moment","PromishLib","StreamBuf","utils","CSV","module","exports","workbook","worksheet","SpecialValues","error","prototype","readFile","filename","options","self","stream","exists","then","Error","createReadStream","read","close","Promish","resolve","reject","csvStream","createInputStream","on","pipe","addWorksheet","sheetName","dateFormats","ISO_8601","map","datum","isNaN","parseFloat","dt","isValid","Date","valueOf","special","undefined","data","addRow","emit","write","getWorksheet","sheetId","createWriteStream","dateFormat","dateUTC","value","text","hyperlink","formula","result","utc","format","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","values","shift","end","writeFile","streamOptions","encoding","writeBuffer"],"mappings":"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","file":"csv.js","sourcesContent":["/**\n * Copyright (c) 2015-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\n\nvar fs = require('fs');\nvar csv = require('fast-csv');\nvar moment = require('moment');\nvar PromishLib = require('../utils/promish');\nvar StreamBuf = require('../utils/stream-buf');\n\nvar utils = require('../utils/utils');\n\nvar CSV = module.exports = function(workbook) {\n  this.workbook = workbook;\n  this.worksheet = null;\n};\n\n/* eslint-disable quote-props */\nvar SpecialValues = {\n  'true': true,\n  'false': false,\n  '#N/A': { error: '#N/A' },\n  '#REF!': { error: '#REF!' },\n  '#NAME?': { error: '#NAME?' },\n  '#DIV/0!': { error: '#DIV/0!' },\n  '#NULL!': { error: '#NULL!' },\n  '#VALUE!': { error: '#VALUE!' },\n  '#NUM!': { error: '#NUM!' },\n};\n/* eslint-ensable quote-props */\n\n\nCSV.prototype = {\n  readFile: function(filename, options) {\n    var self = this;\n    options = options || {};\n    var stream;\n    return utils.fs.exists(filename)\n      .then(function(exists) {\n        if (!exists) {\n          throw new Error('File not found: ' + filename);\n        }\n        stream = fs.createReadStream(filename);\n        return self.read(stream, options);\n      })\n      .then(function(worksheet) {\n        stream.close();\n        return worksheet;\n      });\n  },\n  read: function(stream, options) {\n    options = options || {};\n    return new PromishLib.Promish((resolve, reject) => {\n      var csvStream = this.createInputStream(options)\n        .on('worksheet', resolve)\n        .on('error', reject);\n\n      stream.pipe(csvStream);\n    });\n  },\n  createInputStream: function(options) {\n    options = options || {};\n    var worksheet = this.workbook.addWorksheet(options.sheetName);\n\n    var dateFormats = options.dateFormats || [\n        moment.ISO_8601,\n        'MM-DD-YYYY',\n        'YYYY-MM-DD'\n      ];\n    var map = options.map || function(datum) {\n        if (datum === '') {\n          return null;\n        }\n        if (!isNaN(datum)) {\n          return parseFloat(datum);\n        }\n        var dt = moment(datum, dateFormats, true);\n        if (dt.isValid()) {\n          return new Date(dt.valueOf());\n        }\n        var special = SpecialValues[datum];\n        if (special !== undefined) {\n          return special;\n        }\n        return datum;\n      };\n\n    var csvStream = csv(options)\n      .on('data', function(data) {\n        worksheet.addRow(data.map(map));\n      })\n      .on('end', function() {\n        csvStream.emit('worksheet', worksheet);\n      });\n    return csvStream;\n  },\n\n  write: function(stream, options) {\n    return new PromishLib.Promish((resolve, reject) => {\n      options = options || {};\n      // var encoding = options.encoding || 'utf8';\n      // var separator = options.separator || ',';\n      // var quoteChar = options.quoteChar || '\\'';\n\n      var worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\n\n      var csvStream = csv.createWriteStream(options);\n      stream.on('finish', () => { resolve(); });\n      csvStream.on('error', reject);\n      csvStream.pipe(stream);\n\n      var dateFormat = options.dateFormat;\n      var dateUTC = options.dateUTC;\n      var map = options.map || (value => {\n          if (value) {\n            if (value.text || value.hyperlink) {\n              return value.hyperlink || value.text || '';\n            }\n            if (value.formula || value.result) {\n              return value.result || '';\n            }\n            if (value instanceof Date) {\n              if (dateFormat) {\n                dateUTC ? moment.utc(value).format(dateFormat) : moment(value).format(dateFormat);\n              }\n              return dateUTC ? moment.utc(value).format() : moment(value).format()\n            }\n            if (value.error) {\n              return value.error;\n            }\n            if (typeof value === 'object') {\n              return JSON.stringify(value);\n            }\n          }\n          return value;\n        });\n\n      var includeEmptyRows = (options.includeEmptyRows === undefined) || options.includeEmptyRows;\n      var lastRow = 1;\n      if (worksheet) {\n        worksheet.eachRow(function(row, rowNumber) {\n          if (includeEmptyRows) {\n            while (lastRow++ < rowNumber - 1) {\n              csvStream.write([]);\n            }\n          }\n          var values = row.values;\n          values.shift();\n          csvStream.write(values.map(map));\n          lastRow = rowNumber;\n        });\n      }\n      csvStream.end();\n    });\n  },\n  writeFile: function(filename, options) {\n    options = options || {};\n\n    var streamOptions = {\n      encoding: options.encoding || 'utf8'\n    };\n    var stream = fs.createWriteStream(filename, streamOptions);\n\n    return this.write(stream, options);\n  },\n  writeBuffer: function(options) {\n    var self = this;\n    var stream = new StreamBuf();\n    return self.write(stream, options)\n      .then(function() {\n        return stream.read();\n      });\n  }\n};\n"]}