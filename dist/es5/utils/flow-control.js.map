{"version":3,"sources":["../../../lib/utils/flow-control.js"],"names":["events","require","PromishLib","utils","FlowControl","module","exports","options","queue","pipes","children","parent","flushing","gc","getTimeout","threshold","undefined","divisor","memory","process","memoryUsage","heapSize","heapTotal","Math","floor","inherits","EventEmitter","name","corked","join","length","some","child","stem","_write","dst","data","encoding","Promish","resolve","reject","write","error","_pipe","chunk","promises","forEach","pipe","sync","stream","push","end","all","then","callback","e","_animate","count","seq","cr","setInterval","stdout","_delay","timeout","anime","setTimeout","clearInterval","_flush","shift","setImmediate","emit","Function","nop","Error","stemFlow","unpipe","filter","createChild","Object","assign","on","item"],"mappings":"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","file":"flow-control.js","sourcesContent":["/**\n * Copyright (c) 2015-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar events = require('events');\nvar PromishLib = require('./promish');\n\nvar utils = require('./utils');\n\n// =============================================================================\n// FlowControl - Used to slow down streaming to manageable speed\n// Implements a subset of Stream.Duplex: pipe() and write()\nvar FlowControl = module.exports = function(options) {\n  this.options = options = options || {};\n\n  // Buffer queue\n  this.queue = [];\n\n  // Consumer streams\n  this.pipes = [];\n\n  // Down-stream flow-control instances\n  this.children = [];\n\n  // Up-stream flow-control instances\n  this.parent = options.parent;\n\n  // Ensure we don't flush more than once at a time\n  this.flushing = false;\n\n  // determine timeout for flow control delays\n  if (options.gc) {\n    var gc = options.gc;\n    if (gc.getTimeout) {\n      this.getTimeout = gc.getTimeout;\n    } else {\n      // heap size below which we don't bother delaying\n      var threshold = gc.threshold !== undefined ? gc.threshold : 150000000;\n      // convert from heapsize to ms timeout\n      var divisor = gc.divisor !== undefined ? gc.divisor : 500000;\n      this.getTimeout = function() {\n        var memory = process.memoryUsage();\n        var heapSize = memory.heapTotal;\n        return (heapSize < threshold) ? 0 : Math.floor(heapSize / divisor);\n      };\n    }\n  } else {\n    this.getTimeout = null;\n  }\n};\n\nutils.inherits(FlowControl, events.EventEmitter, {\n  get name() {\n    return [\n      'FlowControl',\n      this.parent ? 'Child' : 'Root',\n      this.corked ? 'corked' : 'open'\n    ].join(' ');\n  },\n  get corked() {\n    // We remain corked while we have children and at least one has data to consume\n    return (this.children.length > 0) &&\n      this.children.some(function(child) { return child.queue && child.queue.length; });\n  },\n  get stem() {\n    // the decision to stem the incoming data depends on whether the children are corked\n    // and how many buffers we have backed up\n    return this.corked || !this.queue || (this.queue.length > 2);\n  },\n\n  _write: function(dst, data, encoding) {\n    // Write to a single destination and return a promise\n\n    return new PromishLib.Promish(function(resolve, reject) {\n      dst.write(data, encoding, function(error) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  },\n\n  _pipe: function(chunk) {\n    // Write chunk to all pipes. A chunk with no data is the end\n    var promises = [];\n    this.pipes.forEach(pipe => {\n      if (chunk.data) {\n        if (pipe.sync) {\n          pipe.stream.write(chunk.data, chunk.encoding);\n        } else {\n          promises.push(this._write(pipe.stream, chunk.data, chunk.encoding));\n        }\n      } else {\n        pipe.stream.end();\n      }\n    });\n    if (!promises.length) {\n      promises.push(PromishLib.Promish.resolve());\n    }\n    return PromishLib.Promish.all(promises)\n      .then(function() {\n        try {\n          chunk.callback();\n        } catch (e) {\n          // quietly ignore\n        }\n      });\n  },\n  _animate: function() {\n    var count = 0;\n    var seq = ['|', '/', '-', '\\\\'];\n    var cr = '\\u001b[0G'; // was '\\033[0G'\n    return setInterval(function() {\n      process.stdout.write(seq[count++ % 4] + cr);\n    }, 100);\n  },\n  _delay: function() {\n    // in certain situations it may be useful to delay processing (e.g. for GC)\n    var timeout = this.getTimeout && this.getTimeout();\n    if (timeout) {\n      return new PromishLib.Promish(resolve => {\n        var anime = this._animate();\n        setTimeout(() => {\n          clearInterval(anime);\n          resolve();\n        }, timeout);\n      });\n    }\n    return PromishLib.Promish.resolve();\n  },\n\n  _flush: function() {\n    // If/while not corked and we have buffers to send, send them\n    if (this.queue && !this.flushing && !this.corked) {\n      if (this.queue.length) {\n        this.flushing = true;\n        this._delay()\n          .then(() => this._pipe(this.queue.shift()))\n          .then(() => {\n            setImmediate(() => {\n              this.flushing = false;\n              this._flush();\n            });\n          });\n      }\n\n      if (!this.stem) {\n        // Signal up-stream that we're ready for more data\n        this.emit('drain');\n      }\n    }\n  },\n\n  write: function(data, encoding, callback) {\n    // Called by up-stream pipe\n    if (encoding instanceof Function) {\n      callback = encoding;\n      encoding = 'utf8';\n    }\n    callback = callback || utils.nop;\n\n    if (!this.queue) {\n      throw new Error('Cannot write to stream after end');\n    }\n\n    // Always queue chunks and then flush\n    this.queue.push({\n      data: data,\n      encoding: encoding,\n      callback: callback\n    });\n    this._flush();\n\n    // restrict further incoming data if we have backed up buffers or\n    // the children are still busy\n    var stemFlow = this.corked || (this.queue.length > 3);\n    return !stemFlow;\n  },\n\n  end: function() {\n    // Signal from up-stream\n    this.queue.push({\n      callback: () => {\n        this.queue = null;\n        this.emit('finish');\n      }\n    });\n    this._flush();\n  },\n\n  pipe: function(stream, options) {\n    options = options || {};\n\n    // some streams don't call callbacks\n    var sync = options.sync || false;\n\n    this.pipes.push({\n      stream: stream,\n      sync: sync\n    });\n  },\n  unpipe: function(stream) {\n    this.pipes = this.pipes.filter(function(pipe) {\n      return pipe.stream !== stream;\n    });\n  },\n\n  createChild: function() {\n    // Create a down-stream flow-control\n    var options = Object.assign({parent: this}, this.options);\n    var child = new FlowControl(options);\n    this.children.push(child);\n\n    child.on('drain', () => {\n      // a child is ready for more\n      this._flush();\n    });\n\n    child.on('finish', () => {\n      // One child has finished its stream. Remove it and continue\n      this.children = this.children.filter(item => item !== child);\n      this._flush();\n    });\n\n    return child;\n  }\n});\n"]}