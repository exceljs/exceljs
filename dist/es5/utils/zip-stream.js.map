{"version":3,"sources":["../../../lib/utils/zip-stream.js"],"names":["events","require","PromishLib","JSZip","utils","StreamBuf","ZipReader","options","count","jsZip","stream","on","_process","getEntryType","inherits","EventEmitter","_finished","Promish","resolve","then","emit","content","read","loadAsync","zip","forEach","path","entry","dir","async","entryStream","write","data","autodrain","catch","error","encoding","callback","cork","uncork","end","destroy","ZipWriter","append","hasOwnProperty","base64","file","name","finalize","type","compression","generateAsync","size","setEncoding","pause","resume","isPaused","pipe","destination","unpipe","unshift","chunk","wrap","module","exports"],"mappings":"AAAA;;;;;;AAMA;;AAEA;AACA;AACA;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,aAAaD,QAAQ,WAAR,CAAjB;;AAEA,IAAIE,QAAQF,QAAQ,OAAR,CAAZ;;AAEA,IAAIG,QAAQH,QAAQ,SAAR,CAAZ;AACA,IAAII,YAAYJ,QAAQ,cAAR,CAAhB;;AAGA;AACA;AACA;AACA,IAAIK,YAAY,SAAZA,SAAY,CAASC,OAAT,EAAkB;AAAA;;AAChC,OAAKC,KAAL,GAAa,CAAb;AACA,OAAKC,KAAL,GAAa,IAAIN,KAAJ,EAAb;AACA,OAAKO,MAAL,GAAc,IAAIL,SAAJ,EAAd;AACA,OAAKK,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7B,UAAKC,QAAL;AACD,GAFD;AAGA,OAAKC,YAAL,GAAoBN,QAAQM,YAAR,IAAyB;AAAA,WAAM,QAAN;AAAA,GAA7C;AACD,CARD;;AAUAT,MAAMU,QAAN,CAAeR,SAAf,EAA0BN,OAAOe,YAAjC,EAA+C;AAC7CC,aAAW,qBAAW;AAAA;;AACpB,QAAI,CAAC,GAAE,KAAKR,KAAZ,EAAmB;AACjBN,iBAAWe,OAAX,CAAmBC,OAAnB,GACGC,IADH,CACQ,YAAM;AACV,eAAKC,IAAL,CAAU,UAAV;AACD,OAHH;AAID;AACF,GAR4C;AAS7CR,YAAU,oBAAW;AAAA;;AACnB,QAAIS,UAAU,KAAKX,MAAL,CAAYY,IAAZ,EAAd;AACA,SAAKb,KAAL,CAAWc,SAAX,CAAqBF,OAArB,EACGF,IADH,CACQ,eAAO;AACXK,UAAIC,OAAJ,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3B,YAAI,CAACA,MAAMC,GAAX,EAAgB;AACd,iBAAKpB,KAAL;AACAmB,gBAAME,KAAN,CAAY,OAAKhB,YAAL,CAAkBa,IAAlB,CAAZ,EACGP,IADH,CACQ,gBAAQ;AACZ,gBAAIW,cAAc,IAAIzB,SAAJ,EAAlB;AACAyB,wBAAYJ,IAAZ,GAAmBA,IAAnB;AACAI,wBAAYC,KAAZ,CAAkBC,IAAlB;AACAF,wBAAYG,SAAZ,GAAwB,YAAM;AAC5B,qBAAKjB,SAAL;AACD,aAFD;AAGAc,wBAAYnB,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7B,qBAAKK,SAAL;AACD,aAFD;;AAIA,mBAAKI,IAAL,CAAU,OAAV,EAAmBU,WAAnB;AACD,WAbH,EAcGI,KAdH,CAcS,iBAAS;AACd,mBAAKd,IAAL,CAAU,OAAV,EAAmBe,KAAnB;AACD,WAhBH;AAiBD;AACF,OArBD;AAsBD,KAxBH,EAyBGD,KAzBH,CAyBS,iBAAS;AACd,aAAKd,IAAL,CAAU,OAAV,EAAmBe,KAAnB;AACD,KA3BH;AA4BD,GAvC4C;;AAyC7C;AACA;AACAJ,SAAO,eAASC,IAAT,EAAeI,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,QAAI,KAAKF,KAAT,EAAgB;AACd,UAAIE,QAAJ,EAAc;AACZA,iBAASF,KAAT;AACD;AACD,YAAMA,KAAN;AACD,KALD,MAKO;AACL,aAAO,KAAKzB,MAAL,CAAYqB,KAAZ,CAAkBC,IAAlB,EAAwBI,QAAxB,EAAkCC,QAAlC,CAAP;AACD;AACF,GApD4C;AAqD7CC,QAAM,gBAAW;AACf,WAAO,KAAK5B,MAAL,CAAY4B,IAAZ,EAAP;AACD,GAvD4C;AAwD7CC,UAAQ,kBAAW;AACjB,WAAO,KAAK7B,MAAL,CAAY6B,MAAZ,EAAP;AACD,GA1D4C;AA2D7CC,OAAK,eAAW;AACd,WAAO,KAAK9B,MAAL,CAAY8B,GAAZ,EAAP;AACD,GA7D4C;AA8D7CC,WAAS,iBAASN,KAAT,EAAgB;AACvB,SAAKf,IAAL,CAAU,UAAV;AACA,SAAKe,KAAL,GAAaA,KAAb;AACD;AAjE4C,CAA/C;;AAoEA;AACA;AACA;AACA,IAAIO,YAAY,SAAZA,SAAY,GAAW;AACzB,OAAKlB,GAAL,GAAW,IAAIrB,KAAJ,EAAX;AACA,OAAKO,MAAL,GAAc,IAAIL,SAAJ,EAAd;AACD,CAHD;;AAKAD,MAAMU,QAAN,CAAe4B,SAAf,EAA0B1C,OAAOe,YAAjC,EAA+C;;AAE7C4B,UAAQ,gBAASX,IAAT,EAAezB,OAAf,EAAwB;AAC9B,QAAIA,QAAQqC,cAAR,CAAuB,QAAvB,KAAoCrC,QAAQsC,MAAhD,EAAwD;AACtD,WAAKrB,GAAL,CAASsB,IAAT,CAAcvC,QAAQwC,IAAtB,EAA4Bf,IAA5B,EAAkC,EAAEa,QAAQ,IAAV,EAAlC;AACD,KAFD,MAEO;AACL,WAAKrB,GAAL,CAASsB,IAAT,CAAcvC,QAAQwC,IAAtB,EAA4Bf,IAA5B;AACD;AACF,GAR4C;AAS7CgB,YAAU,oBAAW;AAAA;;AACnB,QAAIzC,UAAU;AACZ0C,YAAM,YADM;AAEZC,mBAAa;AAFD,KAAd;AAIA,WAAO,KAAK1B,GAAL,CAAS2B,aAAT,CAAuB5C,OAAvB,EACJY,IADI,CACC,mBAAW;AACf,aAAKT,MAAL,CAAY8B,GAAZ,CAAgBnB,OAAhB;AACA,aAAKD,IAAL,CAAU,QAAV;AACD,KAJI,CAAP;AAKD,GAnB4C;;AAqB7C;AACA;AACAE,QAAM,cAAS8B,IAAT,EAAe;AACnB,WAAO,KAAK1C,MAAL,CAAYY,IAAZ,CAAiB8B,IAAjB,CAAP;AACD,GAzB4C;AA0B7CC,eAAa,qBAASjB,QAAT,EAAmB;AAC9B,WAAO,KAAK1B,MAAL,CAAY2C,WAAZ,CAAwBjB,QAAxB,CAAP;AACD,GA5B4C;AA6B7CkB,SAAO,iBAAW;AAChB,WAAO,KAAK5C,MAAL,CAAY4C,KAAZ,EAAP;AACD,GA/B4C;AAgC7CC,UAAQ,kBAAW;AACjB,WAAO,KAAK7C,MAAL,CAAY6C,MAAZ,EAAP;AACD,GAlC4C;AAmC7CC,YAAU,oBAAW;AACnB,WAAO,KAAK9C,MAAL,CAAY8C,QAAZ,EAAP;AACD,GArC4C;AAsC7CC,QAAM,cAASC,WAAT,EAAsBnD,OAAtB,EAA+B;AACnC,WAAO,KAAKG,MAAL,CAAY+C,IAAZ,CAAiBC,WAAjB,EAA8BnD,OAA9B,CAAP;AACD,GAxC4C;AAyC7CoD,UAAQ,gBAASD,WAAT,EAAsB;AAC5B,WAAO,KAAKhD,MAAL,CAAYiD,MAAZ,CAAmBD,WAAnB,CAAP;AACD,GA3C4C;AA4C7CE,WAAS,iBAASC,KAAT,EAAgB;AACvB,WAAO,KAAKnD,MAAL,CAAYkD,OAAZ,CAAoBC,KAApB,CAAP;AACD,GA9C4C;AA+C7CC,QAAM,cAASpD,MAAT,EAAiB;AACrB,WAAO,KAAKA,MAAL,CAAYoD,IAAZ,CAAiBpD,MAAjB,CAAP;AACD;AAjD4C,CAA/C;;AAoDA;;AAEAqD,OAAOC,OAAP,GAAiB;AACf1D,aAAWA,SADI;AAEfoC,aAAWA;AAFI,CAAjB","file":"zip-stream.js","sourcesContent":["/**\n * Copyright (c) 2016-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\n// The purpose of this module is to wrap the js-zip library into a streaming zip library\n// since most of the exceljs code uses streams.\n// One day I might find (or build) a properly streaming browser safe zip lib\n\nvar events = require('events');\nvar PromishLib = require('./promish');\n\nvar JSZip = require('jszip');\n\nvar utils = require('./utils');\nvar StreamBuf = require('./stream-buf');\n\n\n// =============================================================================\n// The ZipReader class\n// Unpacks an incoming zip stream\nvar ZipReader = function(options) {\n  this.count = 0;\n  this.jsZip = new JSZip();\n  this.stream = new StreamBuf();\n  this.stream.on('finish', () => {\n    this._process();\n  });\n  this.getEntryType = options.getEntryType || (() => 'string');\n};\n\nutils.inherits(ZipReader, events.EventEmitter, {\n  _finished: function() {\n    if (!--this.count) {\n      PromishLib.Promish.resolve()\n        .then(() => {\n          this.emit('finished');\n        });\n    }\n  },\n  _process: function() {\n    var content = this.stream.read();\n    this.jsZip.loadAsync(content)\n      .then(zip => {\n        zip.forEach((path, entry) => {\n          if (!entry.dir) {\n            this.count++;\n            entry.async(this.getEntryType(path))\n              .then(data => {\n                var entryStream = new StreamBuf();\n                entryStream.path = path;\n                entryStream.write(data);\n                entryStream.autodrain = () => {\n                  this._finished();\n                };\n                entryStream.on('finish', () => {\n                  this._finished();\n                });\n\n                this.emit('entry', entryStream);\n              })\n              .catch(error => {\n                this.emit('error', error);\n              });\n          }\n        });\n      })\n      .catch(error => {\n        this.emit('error', error);\n      });\n  },\n\n  // ==========================================================================\n  // Stream.Writable interface\n  write: function(data, encoding, callback) {\n    if (this.error) {\n      if (callback) {\n        callback(error);\n      }\n      throw error;\n    } else {\n      return this.stream.write(data, encoding, callback);\n    }\n  },\n  cork: function() {\n    return this.stream.cork();\n  },\n  uncork: function() {\n    return this.stream.uncork();\n  },\n  end: function() {\n    return this.stream.end();\n  },\n  destroy: function(error) {\n    this.emit('finished');\n    this.error = error;\n  }\n});\n\n// =============================================================================\n// The ZipWriter class\n// Packs streamed data into an output zip stream\nvar ZipWriter = function() {\n  this.zip = new JSZip();\n  this.stream = new StreamBuf();\n};\n\nutils.inherits(ZipWriter, events.EventEmitter, {\n\n  append: function(data, options) {\n    if (options.hasOwnProperty('base64') && options.base64) {\n      this.zip.file(options.name, data, { base64: true });\n    } else {\n      this.zip.file(options.name, data);\n    }\n  },\n  finalize: function() {\n    var options = {\n      type: 'nodebuffer',\n      compression: 'DEFLATE'\n    };\n    return this.zip.generateAsync(options)\n      .then(content => {\n        this.stream.end(content);\n        this.emit('finish');\n      });\n  },\n\n  // ==========================================================================\n  // Stream.Readable interface\n  read: function(size) {\n    return this.stream.read(size);\n  },\n  setEncoding: function(encoding) {\n    return this.stream.setEncoding(encoding);\n  },\n  pause: function() {\n    return this.stream.pause();\n  },\n  resume: function() {\n    return this.stream.resume();\n  },\n  isPaused: function() {\n    return this.stream.isPaused();\n  },\n  pipe: function(destination, options) {\n    return this.stream.pipe(destination, options);\n  },\n  unpipe: function(destination) {\n    return this.stream.unpipe(destination);\n  },\n  unshift: function(chunk) {\n    return this.stream.unshift(chunk);\n  },\n  wrap: function(stream) {\n    return this.stream.wrap(stream);\n  }\n});\n\n// =============================================================================\n\nmodule.exports = {\n  ZipReader: ZipReader,\n  ZipWriter: ZipWriter\n};\n"]}