{"version":3,"sources":["../../../lib/doc/worksheet.js"],"names":["_","require","colCache","Range","Row","Column","Enums","DataValidations","Worksheet","module","exports","options","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","_workbook","workbook","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","dataValidations","views","autoFilter","_media","prototype","destroy","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","columns","value","self","_headerRowCount","reduce","pv","cv","headerCount","headers","length","Math","count","defn","column","push","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","spliceColumns","start","i","inserts","Array","slice","call","arguments","rows","nRows","rowArguments","insert","getRow","splice","apply","r","nExpand","nKeep","nEnd","columnCount","maxCount","eachRow","cellCount","actualColumnCount","counts","eachCell","cell","_commitRow","_lastRowNumber","_nextRow","lastRow","findRow","rowCount","actualRowCount","addRow","values","addRows","spliceRows","rSrc","iteratee","includeEmpty","hasValues","getSheetValues","findCell","address","getAddress","getCell","getCellEx","mergeCells","merge","intersects","Error","master","j","_unMergeMaster","unmerge","hasMerges","some","unMergeCells","type","ValueType","Merge","fillFormula","range","formula","results","decoded","decode","width","masterAddress","encodeAddress","getResult","isArray","first","result","sharedFormula","addImage","addImageToCells","imageId","getImages","filter","m","addBackgroundImage","getBackgroundImageId","map","tabColor","console","trace","model","media","cols","toModel","rowModel","merges","_parseRows","_parseMergeCells","fromModel"],"mappings":"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","file":"worksheet.js","sourcesContent":["/**\n * Copyright (c) 2014-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar _ = require('../utils/under-dash');\n\nvar colCache = require('./../utils/col-cache');\nvar Range = require('./range');\nvar Row = require('./row');\nvar Column = require('./column');\nvar Enums = require('./enums');\nvar DataValidations = require('./data-validations');\n\n// Worksheet requirements\n//  Operate as sheet inside workbook or standalone\n//  Load and Save from file and stream\n//  Access/Add/Delete individual cells\n//  Manage column widths and row heights\n\nvar Worksheet = module.exports = function(options) {\n  options = options || {};\n\n  // in a workbook, each sheet will have a number\n  this.id = options.id;\n  this.orderNo = options.orderNo;\n\n  // and a name\n  this.name = options.name || 'Sheet' + this.id;\n\n  // add a state\n  this.state = options.state || 'show';\n\n  // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\n  // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\n  this._rows = [];\n\n  // column definitions\n  this._columns = null;\n\n  // column keys (addRow convenience): key ==> this._collumns index\n  this._keys = {};\n\n  // keep record of all merges\n  this._merges = {};\n\n  // record of all row and column pageBreaks\n  this.rowBreaks = [];\n\n  this._workbook = options.workbook;\n\n  // for tabColor, default row height, outline levels, etc\n  this.properties = Object.assign({}, {\n    defaultRowHeight: 15,\n    dyDescent: 55,\n    outlineLevelCol: 0,\n    outlineLevelRow: 0\n  }, options.properties);\n\n  // for all things printing\n  this.pageSetup = Object.assign({}, {\n    margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3 },\n    orientation: 'portrait',\n    horizontalDpi: 4294967295,\n    verticalDpi: 4294967295,\n    fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n    pageOrder: 'downThenOver',\n    blackAndWhite: false,\n    draft: false,\n    cellComments: 'None',\n    errors: 'displayed',\n    scale: 100,\n    fitToWidth: 1,\n    fitToHeight: 1,\n    paperSize: undefined,\n    showRowColHeaders: false,\n    showGridLines: false,\n    firstPageNumber: undefined,\n    horizontalCentered: false,\n    verticalCentered: false,\n    rowBreaks: null,\n    colBreaks: null\n  }, options.pageSetup);\n\n  this.dataValidations = new DataValidations();\n\n  // for freezepanes, split, zoom, gridlines, etc\n  this.views = options.views || [];\n\n  this.autoFilter = options.autoFilter || null;\n\n  // for images, etc\n  this._media = [];\n};\n\nWorksheet.prototype = {\n\n  get workbook() {\n    return this._workbook;\n  },\n\n  // when you're done with this worksheet, call this to remove from workbook\n  destroy: function() {\n    this._workbook.removeWorksheetEx(this);\n  },\n\n  // Get the bounding range of the cells in this worksheet\n  get dimensions() {\n    var dimensions = new Range();\n    this._rows.forEach(function(row) {\n      if (row) {\n        var rowDims = row.dimensions;\n        if (rowDims) {\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\n        }\n      }\n    });\n    return dimensions;\n  },\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  },\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    var self = this;\n\n    // calculate max header row count\n    this._headerRowCount = value.reduce(function(pv, cv) {\n      var headerCount =\n        (cv.header && 1) ||\n        (cv.headers && cv.headers.length) ||\n        0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    var count = 1;\n    var columns = this._columns = [];\n    value.forEach(function(defn) {\n      var column = new Column(self, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  },\n\n  getColumnKey(key) {\n    return this._keys[key];\n  },\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  },\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  },\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  },\n\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\n  getColumn: function(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      var col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) { this._columns = []; }\n    if (c > this._columns.length) {\n      var n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  },\n  spliceColumns: function(start, count) {\n    // each member of inserts is a column of data.\n    var i;\n    var inserts = Array.prototype.slice.call(arguments, 2);\n    var rows = this._rows;\n    var nRows = rows.length;\n    if (inserts.length > 0) {\n      // must iterate over all rows whether they exist yet or not\n      for (i = 0; i < nRows; i++) {\n        var rowArguments = [start, count];\n        inserts.forEach(function(insert) { // eslint-disable-line no-loop-func\n          rowArguments.push(insert[i] || null);\n        });\n        var row = this.getRow(i + 1);\n        // eslint-disable-next-line prefer-spread\n        row.splice.apply(row, rowArguments);\n      }\n    } else {\n      // nothing to insert, so just splice all rows\n      this._rows.forEach(function(r, i) {\n        if (r) {\n          r.splice(start, count);\n        }\n      });\n    }\n\n    // splice column definitions\n    var nExpand = inserts.length - count;\n    var nKeep = start + count;\n    var nEnd = this._columns.length;\n    if (nExpand < 0) {\n      for(i = start + inserts.length; i <= nEnd; i++) {\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\n      }\n    } else if (nExpand > 0) {\n      for (i = nEnd; i >= nKeep; i--) {\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\n      }\n    }\n    for (i = start; i < start + inserts.length; i++) {\n      this.getColumn(i).defn = null;\n    }\n  },\n\n  get columnCount() {\n    var maxCount = 0;\n    this.eachRow(function(row) {\n      maxCount = Math.max(maxCount, row.cellCount);\n    });\n    return maxCount;\n  },\n  get actualColumnCount() {\n    // performance nightmare - for each row, counts all the columns used\n    var counts = [];\n    var count = 0;\n    this.eachRow(function(row) {\n      row.eachCell(function(cell) {\n        var col = cell.col;\n        if (!counts[col]) {\n          counts[col] = true;\n          count++;\n        }\n      });\n    });\n    return count;\n  },\n\n\n  // =========================================================================\n  // Rows\n\n  _commitRow: function() {\n    // nop - allows streaming reader to fill a document\n  },\n\n  get _lastRowNumber() {\n    // need to cope with results of splice\n    var rows = this._rows;\n    var n = rows.length;\n    while ((n > 0) && (rows[n - 1] === undefined)) {\n      n--;\n    }\n    return n;\n  },\n  get _nextRow() {\n    return this._lastRowNumber + 1;\n  },\n\n  get lastRow() {\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  },\n\n  // find a row (if exists) by row number\n  findRow: function(r) {\n    return this._rows[r - 1];\n  },\n\n  get rowCount() {\n    return this._lastRowNumber;\n  },\n  get actualRowCount() {\n    // counts actual rows that have actual data\n    var count = 0;\n    this.eachRow(function() {\n      count++;\n    });\n    return count;\n  },\n\n  // get a row by row number.\n  getRow: function(r) {\n    var row = this._rows[r - 1];\n    if (!row) {\n      row = this._rows[r - 1] = new Row(this, r);\n    }\n    return row;\n  },\n  addRow: function(value) {\n    var row = this.getRow(this._nextRow);\n    row.values = value;\n    return row;\n  },\n  addRows: function(value) {\n    var self = this;\n    value.forEach(function(row) {\n      self.addRow(row);\n    });\n  },\n\n  spliceRows: function(start, count) {\n    // same problem as row.splice, except worse.\n    var inserts = Array.prototype.slice.call(arguments, 2);\n    var nKeep = start + count;\n    var nExpand = inserts.length - count;\n    var nEnd = this._rows.length;\n    var i, rSrc;\n    if (nExpand < 0) {\n      // remove rows\n      for (i = nKeep; i <= nEnd; i++) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          this.getRow(i + nExpand).values = rSrc.values;\n          this._rows[i - 1] = undefined;\n        } else {\n          this._rows[(i + nExpand) - 1] = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          this.getRow(i + nExpand).values = rSrc.values;\n        } else {\n          this._rows[(i + nExpand) - 1] = undefined;\n        }\n      }\n    }\n\n    // now copy over the new values\n    for (i = 0; i < inserts.length; i++) {\n      this.getRow(start + i).values = inserts[i];\n    }\n  },\n\n  // iterate over every row in the worksheet, including maybe empty rows\n  eachRow: function(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      var n = this._rows.length;\n      for (var i = 1; i <= n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(function(row) {\n        if (row && row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  },\n\n  // return all rows as sparse array\n  getSheetValues: function() {\n    var rows = [];\n    this._rows.forEach(function(row) {\n      if (row) { rows[row.number] = row.values; }\n    });\n    return rows;\n  },\n\n  // =========================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell: function(r, c) {\n    var address = colCache.getAddress(r, c);\n    var row = this._rows[address.row - 1];\n    return row ? row.findCell(address.col) : undefined;\n  },\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell: function(r, c) {\n    var address = colCache.getAddress(r, c);\n    var row = this.getRow(address.row);\n    return row.getCellEx(address);\n  },\n\n  // =========================================================================\n  // Merge\n\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\n  mergeCells: function() {\n    var dimensions = new Range(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    _.each(this._merges, function(merge) {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    var master = this.getCell(dimensions.top, dimensions.left);\n    for (var i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (var j = dimensions.left; j <= dimensions.right; j++) {\n        // merge all but the master cell\n        if ((i > dimensions.top) || (j > dimensions.left)) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges[master.address] = dimensions;\n  },\n  _unMergeMaster: function(master) {\n    // master is always top left of a rectangle\n    var merge = this._merges[master.address];\n    if (merge) {\n      for (var i = merge.top; i <= merge.bottom; i++) {\n        for (var j = merge.left; j <= merge.right; j++) {\n          this.getCell(i, j).unmerge();\n        }\n      }\n      delete this._merges[master.address];\n    }\n  },\n\n  get hasMerges() {\n    return _.some(this._merges, function() {\n      // TODO: this doesn't look right\n      return true;\n    });\n  },\n\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\n  // atomic - either they're all merged or all un-merged.\n  unMergeCells: function() {\n    var dimensions = new Range(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // find any cells in that range and unmerge them\n    for (var i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (var j = dimensions.left; j <= dimensions.right; j++) {\n        var cell = this.findCell(i, j);\n        if (cell) {\n          if (cell.type === Enums.ValueType.Merge) {\n            // this cell merges to another master\n            this._unMergeMaster(cell.master);\n          } else if (this._merges[cell.address]) {\n            // this cell is a master\n            this._unMergeMaster(cell);\n          }\n        }\n      }\n    }\n  },\n\n  // ===========================================================================\n  // Shared Formula\n  fillFormula: function(range, formula, results) {\n    // Define formula for top-left cell and share to rest\n    var decoded = colCache.decode(range);\n    var { top, left, bottom, right } = decoded;\n    var width = (right - left) + 1;\n    var masterAddress = colCache.encodeAddress(top, left);\n\n    // work out result accessor\n    var getResult;\n    if (typeof results === 'function') {\n      getResult = results;\n    } else if (Array.isArray(results)) {\n      if (Array.isArray(results[0])) {\n        getResult = (row, col) => results[row - top][col - left];\n      } else {\n        getResult = (row, col) => results[((row - top) * width) + (col - left)];\n      }\n    } else {\n      getResult = () => undefined;\n    }\n    var first = true;\n    for (var r = top; r <= bottom; r++) {\n      for (var c = left; c <= right; c++) {\n        if (first) {\n          this.getCell(r, c).value = {\n            formula,\n            result: getResult(r, c),\n          };\n          first = false;\n        } else {\n          this.getCell(r, c).value = {\n            sharedFormula: masterAddress,\n            result: getResult(r, c),\n          };\n        }\n      }\n    }\n  },\n\n\n  // =========================================================================\n  // Images\n  addImage: function addImageToCells(imageId, range) {\n    this._media.push({\n      type: 'image',\n      imageId,\n      range,\n    });\n  },\n\n  getImages() {\n    return this._media\n      .filter(m => m.type === 'image');\n  },\n\n  addBackgroundImage: function(imageId) {\n    this._media.push({\n      type: 'background',\n      imageId,\n    });\n  },\n\n  getBackgroundImageId() {\n    return this._media\n      .filter(m => m.type === 'background')\n      .map(m => m.imageId)[0];\n  },\n\n  // ===========================================================================\n  // Deprecated\n  get tabColor() {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    return this.properties.tabColor;\n  },\n  set tabColor(value) {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    this.properties.tabColor = value;\n  },\n\n  // ===========================================================================\n  // Model\n\n  get model() {\n    var model = {\n      id: this.id,\n      name: this.name,\n      dataValidations: this.dataValidations.model,\n      properties: this.properties,\n      state: this.state,\n      pageSetup: this.pageSetup,\n      rowBreaks: this.rowBreaks,\n      views: this.views,\n      autoFilter: this.autoFilter,\n      media: this._media,\n    };\n\n    // =================================================\n    // columns\n    model.cols = Column.toModel(this.columns);\n\n    // ==========================================================\n    // Rows\n    var rows = model.rows = [];\n    var dimensions = model.dimensions = new Range();\n    this._rows.forEach(function(row) {\n      var rowModel = row && row.model;\n      if (rowModel) {\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\n        rows.push(rowModel);\n      }\n    });\n\n    // ==========================================================\n    // Merges\n    model.merges = [];\n    _.each(this._merges, function(merge) {\n      model.merges.push(merge.range);\n    });\n\n    return model;\n  },\n  _parseRows: function(model) {\n    this._rows = [];\n    model.rows.forEach(rowModel => {\n      var row = new Row(this, rowModel.number);\n      this._rows[row.number - 1] = row;\n      row.model = rowModel;\n    });\n  },\n  _parseMergeCells: function(model) {\n    _.each(model.mergeCells, merge => {\n      this.mergeCells(merge);\n    });\n  },\n  set model(value) {\n    this.name = value.name;\n    this._columns = Column.fromModel(this, value.cols);\n    this._parseRows(value);\n\n    this._parseMergeCells(value);\n    this.dataValidations = new DataValidations(value.dataValidations);\n    this.properties = value.properties;\n    this.pageSetup = value.pageSetup;\n    this.views = value.views;\n    this.autoFilter = value.autoFilter;\n    this._media = value.media;\n  }\n};\n"]}