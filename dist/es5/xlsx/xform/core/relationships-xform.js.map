{"version":3,"sources":["../../../../../lib/xlsx/xform/core/relationships-xform.js"],"names":["utils","require","XmlStream","BaseXform","RelationshipXform","RelationshipsXform","module","exports","map","Relationship","inherits","RELATIONSHIPS_ATTRIBUTES","xmlns","render","xmlStream","model","_values","openXml","StdDocAttributes","openNode","self","forEach","relationship","closeNode","parseOpen","node","parser","name","Error","JSON","stringify","parseText","text","parseClose","push","undefined"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,2BAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;;AAEA,IAAIG,oBAAoBH,QAAQ,sBAAR,CAAxB;;AAEA,IAAII,qBAAqBC,OAAOC,OAAP,GAAiB,YAAW;AACnD,OAAKC,GAAL,GAAW;AACTC,kBAAc,IAAIL,iBAAJ;AADL,GAAX;AAGD,CAJD;;AAMAJ,MAAMU,QAAN,CAAeL,kBAAf,EAAmCF,SAAnC,EAA8C;AAC5CQ,4BAA0B,EAACC,OAAO,8DAAR;AADkB,CAA9C,EAEG;AACDC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCA,YAAQA,SAAS,KAAKC,OAAtB;AACAF,cAAUG,OAAV,CAAkBf,UAAUgB,gBAA5B;AACAJ,cAAUK,QAAV,CAAmB,eAAnB,EAAoCd,mBAAmBM,wBAAvD;;AAEA,QAAIS,OAAO,IAAX;AACAL,UAAMM,OAAN,CAAc,UAASC,YAAT,EAAuB;AACnCF,WAAKZ,GAAL,CAASC,YAAT,CAAsBI,MAAtB,CAA6BC,SAA7B,EAAwCQ,YAAxC;AACD,KAFD;;AAIAR,cAAUS,SAAV;AACD,GAZA;;AAcDC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;AACD,YAAQA,KAAKE,IAAb;AACE,WAAK,eAAL;AACE,aAAKZ,KAAL,GAAa,EAAb;AACA,eAAO,IAAP;AACF;AACE,aAAKW,MAAL,GAAc,KAAKlB,GAAL,CAASiB,KAAKE,IAAd,CAAd;AACA,YAAI,KAAKD,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,iBAAO,IAAP;AACD;AACD,cAAM,IAAIG,KAAJ,CAAU,uCAAuCC,KAAKC,SAAL,CAAeL,IAAf,CAAjD,CAAN;AAVJ;AAYD,GA/BA;AAgCDM,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYK,SAAZ,CAAsBC,IAAtB;AACD;AACF,GApCA;AAqCDC,cAAY,oBAASN,IAAT,EAAe;AACzB,QAAI,KAAKD,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYO,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,aAAKZ,KAAL,CAAWmB,IAAX,CAAgB,KAAKR,MAAL,CAAYX,KAA5B;AACA,aAAKW,MAAL,GAAcS,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQR,IAAR;AACE,WAAK,eAAL;AACE,eAAO,KAAP;AACF;AACE,cAAM,IAAIC,KAAJ,CAAU,wCAAwCD,IAAlD,CAAN;AAJJ;AAMD;AAnDA,CAFH","file":"relationships-xform.js","sourcesContent":["/**\n * Copyright (c) 2016 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar XmlStream = require('../../../utils/xml-stream');\nvar BaseXform = require('../base-xform');\n\nvar RelationshipXform = require('./relationship-xform');\n\nvar RelationshipsXform = module.exports = function() {\n  this.map = {\n    Relationship: new RelationshipXform()\n  };\n};\n\nutils.inherits(RelationshipsXform, BaseXform, {\n  RELATIONSHIPS_ATTRIBUTES: {xmlns: 'http://schemas.openxmlformats.org/package/2006/relationships'}\n}, {\n  render: function(xmlStream, model) {\n    model = model || this._values;\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('Relationships', RelationshipsXform.RELATIONSHIPS_ATTRIBUTES);\n\n    var self = this;\n    model.forEach(function(relationship) {\n      self.map.Relationship.render(xmlStream, relationship);\n    });\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'Relationships':\n        this.model = [];\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        throw new Error('Unexpected xml node in parseOpen: ' + JSON.stringify(node));\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'Relationships':\n        return false;\n      default:\n        throw new Error('Unexpected xml node in parseClose: ' + name);\n    }\n  }\n});\n"]}