{"version":3,"sources":["../../../../../lib/xlsx/xform/core/app-heading-pairs-xform.js"],"names":["utils","require","BaseXform","AppHeadingPairsXform","module","exports","inherits","render","xmlStream","model","openNode","size","baseType","leafNode","undefined","closeNode","length","parseOpen","node","name","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,uBAAuBC,OAAOC,OAAP,GAAiB,YAAW,CACtD,CADD;;AAGAL,MAAMM,QAAN,CAAeH,oBAAf,EAAqCD,SAArC,EAAgD;AAC9CK,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,cAAnB;AACAF,cAAUE,QAAV,CAAmB,WAAnB,EAAgC,EAACC,MAAM,CAAP,EAAUC,UAAU,SAApB,EAAhC;;AAEAJ,cAAUE,QAAV,CAAmB,YAAnB;AACAF,cAAUK,QAAV,CAAmB,UAAnB,EAA+BC,SAA/B,EAA0C,YAA1C;AACAN,cAAUO,SAAV;;AAEAP,cAAUE,QAAV,CAAmB,YAAnB;AACAF,cAAUK,QAAV,CAAmB,OAAnB,EAA4BC,SAA5B,EAAuCL,MAAMO,MAA7C;AACAR,cAAUO,SAAV;;AAEAP,cAAUO,SAAV;AACAP,cAAUO,SAAV;AACD,GAf6C;;AAiB9CE,aAAW,mBAASC,IAAT,EAAe;AACxB;AACA,WAAOA,KAAKC,IAAL,KAAc,cAArB;AACD,GApB6C;AAqB9CC,aAAW,qBAAW,CACrB,CAtB6C;AAuB9CC,cAAY,oBAASF,IAAT,EAAe;AACzB,WAAOA,SAAS,cAAhB;AACD;AAzB6C,CAAhD","file":"app-heading-pairs-xform.js","sourcesContent":["/**\n * Copyright (c) 2016 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar AppHeadingPairsXform = module.exports = function() {\n};\n\nutils.inherits(AppHeadingPairsXform, BaseXform, {\n  render: function(xmlStream, model) {\n    xmlStream.openNode('HeadingPairs');\n    xmlStream.openNode('vt:vector', {size: 2, baseType: 'variant'});\n\n    xmlStream.openNode('vt:variant');\n    xmlStream.leafNode('vt:lpstr', undefined, 'Worksheets');\n    xmlStream.closeNode();\n    \n    xmlStream.openNode('vt:variant');\n    xmlStream.leafNode('vt:i4', undefined, model.length);\n    xmlStream.closeNode();\n    \n    xmlStream.closeNode();\n    xmlStream.closeNode();\n  },\n  \n  parseOpen: function(node) {\n    // no parsing\n    return node.name === 'HeadingPairs';\n  },\n  parseText: function() {\n  },\n  parseClose: function(name) {\n    return name !== 'HeadingPairs';\n  }\n});\n"]}