{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/blip-xform.js"],"names":["utils","require","BaseXform","BlipXform","module","exports","inherits","tag","render","xmlStream","model","leafNode","rId","cstate","parseOpen","node","name","attributes","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,YAAYC,OAAOC,OAAP,GAAiB,YAAW,CAC3C,CADD;;AAIAL,MAAMM,QAAN,CAAeH,SAAf,EAA0BD,SAA1B,EAAqC;;AAEnC,MAAIK,GAAJ,GAAU;AAAE,WAAO,QAAP;AAAkB,GAFK;;AAInCC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,KAAKJ,GAAxB,EAA6B;AAC3B,iBAAW,qEADgB;AAE3B,iBAAWG,MAAME,GAFU;AAG3BC,cAAQ;AAHmB,KAA7B;AAKA;AACD,GAXkC;;AAanCC,aAAW,mBAASC,IAAT,EAAe;AACxB,YAAQA,KAAKC,IAAb;AACE,WAAK,KAAKT,GAAV;AACE,aAAKG,KAAL,GAAa;AACXE,eAAKG,KAAKE,UAAL,CAAgB,SAAhB;AADM,SAAb;AAGA,eAAO,IAAP;AACF;AACE,eAAO,IAAP;AAPJ;AASD,GAvBkC;;AAyBnCC,aAAW,qBAAW,CACrB,CA1BkC;;AA4BnCC,cAAY,oBAASH,IAAT,EAAe;AACzB,YAAQA,IAAR;AACE,WAAK,KAAKT,GAAV;AACE,eAAO,KAAP;AACF;AACE;AACA,eAAO,IAAP;AALJ;AAOD;AApCkC,CAArC","file":"blip-xform.js","sourcesContent":["/**\n * Copyright (c) 2016-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar BlipXform = module.exports = function() {\n};\n\n\nutils.inherits(BlipXform, BaseXform, {\n\n  get tag() { return 'a:blip'; },\n\n  render: function(xmlStream, model) {\n    xmlStream.leafNode(this.tag, {\n      'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n      'r:embed': model.rId,\n      cstate: 'print'\n    });\n    // TODO: handle children (e.g. a:extLst=>a:ext=>a14:useLocalDpi\n  },\n\n  parseOpen: function(node) {\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          rId: node.attributes['r:embed']\n        };\n        return true;\n      default:\n        return true;\n    }\n  },\n\n  parseText: function() {\n  },\n\n  parseClose: function(name) {\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        // unprocessed internal nodes\n        return true;\n    }\n  }\n});\n"]}