{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"names":["utils","require","BaseXform","Enums","Range","RichTextXform","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","text","hyperlink","Hyperlink","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","module","exports","richTextXForm","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","sharedStrings","ssId","add","value","date1904","hyperlinks","push","address","target","Merge","merges","formulae","sharedFormula","master","si","ref","expandToAddress","siFormulae","renderFormula","xmlStream","attrs","t","range","leafNode","addAttribute","dateToExcel","render","openNode","richText","self","forEach","closeNode","parseOpen","node","parser","name","attributes","r","s","parseInt","currentNode","parseText","parseClose","xmlDecode","parseFloat","reconcile","getStyleModel","getString","RichText","isDateFmt","numFmt","excelToDate","hyperlinkMap"],"mappings":"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","file":"cell-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar Enums = require('../../../doc/enums');\nvar Range = require('../../../doc/range');\n\nvar RichTextXform = require('../strings/rich-text-xform');\n\nfunction getValueType(v) {\n  if ((v === null) || (v === undefined)) {\n    return Enums.ValueType.Null;\n  } else if ((v instanceof String) || (typeof v === 'string')) {\n    return Enums.ValueType.String;\n  } else if (typeof v === 'number') {\n    return Enums.ValueType.Number;\n  } else if (typeof v === 'boolean') {\n    return Enums.ValueType.Boolean;\n  } else if (v instanceof Date) {\n    return Enums.ValueType.Date;\n  } else if (v.text && v.hyperlink) {\n    return Enums.ValueType.Hyperlink;\n  } else if (v.formula) {\n    return Enums.ValueType.Formula;\n  } else if (v.error) {\n    return Enums.ValueType.Error;\n  }\n  throw new Error('I could not understand type of value');\n}\n\nfunction getEffectiveCellType(cell) {\n  switch (cell.type) {\n    case Enums.ValueType.Formula:\n      return getValueType(cell.result);\n    default:\n      return cell.type;\n  }\n}\n\n\nvar CellXform = module.exports = function() {\n  this.richTextXForm = new RichTextXform();\n};\n\nutils.inherits(CellXform, BaseXform, {\n\n  get tag() { return 'c'; },\n\n  prepare: function(model, options) {\n    var styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\n    if (styleId) {\n      model.styleId = styleId;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.value);\n        }\n        break;\n      case Enums.ValueType.Date:\n        if (options.date1904) {\n          model.date1904 = true;\n        }\n        break;\n      case Enums.ValueType.Hyperlink:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.text);\n        }\n        options.hyperlinks.push({\n          address: model.address,\n          target: model.hyperlink\n        });\n        break;\n      case Enums.ValueType.Merge:\n        options.merges.add(model);\n        break;\n      case Enums.ValueType.Formula:\n        if (options.date1904) {\n          // in case valueType is date\n          model.date1904 = true;\n        }\n        if (model.formula) {\n          options.formulae[model.address] = model;\n        } else if (model.sharedFormula) {\n          const master = options.formulae[model.sharedFormula];\n          if (!master) {\n            throw new Error('Shared Formula master must exist above and or left of clone');\n          }\n          if (master.si !== undefined) {\n            model.si = master.si;\n            master.ref.expandToAddress(model.address);\n          } else {\n            model.si = master.si = options.siFormulae++;\n            master.ref = new Range(master.address, model.address);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  renderFormula: function(xmlStream, model) {\n    var attrs = null;\n    if (model.ref) {\n      attrs = {\n        t: 'shared',\n        ref: model.ref.range,\n        si: model.si,\n      };\n    } else if (model.si !== undefined) {\n      attrs = {\n        t: 'shared',\n        si: model.si,\n      };\n    }\n    switch (getValueType(model.result)) {\n      case Enums.ValueType.Null: // ?\n        xmlStream.leafNode('f', attrs, model.formula);\n        break;\n      case Enums.ValueType.String:\n        // oddly, formula results don't ever use shared strings\n        xmlStream.addAttribute('t', 'str');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\n        break;\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result.error);\n        break;\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\n        break;\n      // case Enums.ValueType.Hyperlink: // ??\n      // case Enums.ValueType.Formula:\n      default:\n        throw new Error('I could not understand type of value');\n    }\n  },\n\n  render: function(xmlStream, model) {\n    if ((model.type === Enums.ValueType.Null) && !model.styleId) {\n      // if null and no style, exit\n      return;\n    }\n\n    xmlStream.openNode('c');\n    xmlStream.addAttribute('r', model.address);\n\n    if (model.styleId) {\n      xmlStream.addAttribute('s', model.styleId);\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.Null:\n        break;\n\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('v', null, model.value);\n        break;\n\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\n        break;\n\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('v', null, model.value.error);\n        break;\n\n      case Enums.ValueType.String:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else {\n          if (model.value && model.value.richText) {\n            xmlStream.addAttribute('t', 'inlineStr');\n            xmlStream.openNode('is');\n            var self = this;\n            model.value.richText.forEach(function(text) {\n              self.richTextXForm.render(xmlStream, text);\n            });\n            xmlStream.closeNode('is');\n          } else {\n            xmlStream.addAttribute('t', 'str');\n            xmlStream.leafNode('v', null, model.value);\n          }\n        }\n        break;\n\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\n        break;\n\n      case Enums.ValueType.Hyperlink:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.text);\n        }\n        break;\n\n      case Enums.ValueType.Formula:\n        this.renderFormula(xmlStream, model);\n        break;\n\n      case Enums.ValueType.Merge:\n        // nothing to add\n        break;\n\n      default:\n        break;\n    }\n\n    xmlStream.closeNode(); // </c>\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'c':\n        // var address = colCache.decodeAddress(node.attributes.r);\n        var model = this.model = {\n          address: node.attributes.r\n        };\n        this.t = node.attributes.t;\n        if (node.attributes.s) {\n          model.styleId = parseInt(node.attributes.s, 10);\n        }\n        return true;\n\n      case 'f':\n        this.currentNode = 'f';\n        this.model.si = node.attributes.si;\n        if (node.attributes.t === 'shared') {\n          this.model.sharedFormula = true;\n        }\n        this.model.ref = node.attributes.ref;\n        return true;\n\n      case 'v':\n        this.currentNode = 'v';\n        return true;\n\n      case 't':\n        this.currentNode = 't';\n        return true;\n\n      case 'r':\n        this.parser = this.richTextXForm;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n      return;\n    }\n    switch (this.currentNode) {\n      case 'f':\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\n        break;\n      case 'v':\n      case 't':\n        if (this.model.value && this.model.value.richText) {\n          this.model.value.richText.text = this.model.value.richText.text ? this.model.value.richText.text + text : text;\n        } else {\n          this.model.value = this.model.value ? this.model.value + text : text;\n        }\n        break;\n      default:\n        break;\n    }\n  },\n  parseClose: function(name) {\n    switch (name) {\n      case 'c':\n        var model = this.model;\n\n        // first guess on cell type\n        if (model.formula || model.sharedFormula) {\n          model.type = Enums.ValueType.Formula;\n          if (model.value) {\n            if (this.t === 'str') {\n              model.result = utils.xmlDecode(model.value);\n            } else if (this.t === 'b') {\n              model.result = parseInt(model.value, 10) !== 0;\n            } else if (this.t === 'e') {\n              model.result = { error: model.value };\n            } else {\n              model.result = parseFloat(model.value);\n            }\n            model.value = undefined;\n          }\n        } else if (model.value !== undefined) {\n          switch (this.t) {\n            case 's':\n              model.type = Enums.ValueType.String;\n              model.value = parseInt(model.value, 10);\n              break;\n            case 'str':\n              model.type = Enums.ValueType.String;\n              model.value = utils.xmlDecode(model.value);\n              break;\n            case 'inlineStr':\n              model.type = Enums.ValueType.String;\n              break;\n            case 'b':\n              model.type = Enums.ValueType.Boolean;\n              model.value = parseInt(model.value, 10) !== 0;\n              break;\n            case 'e':\n              model.type = Enums.ValueType.Error;\n              model.value = { error: model.value };\n              break;\n            default:\n              model.type = Enums.ValueType.Number;\n              model.value = parseFloat(model.value);\n              break;\n          }\n        } else if (model.styleId) {\n          model.type = Enums.ValueType.Null;\n        } else {\n          model.type = Enums.ValueType.Merge;\n        }\n        return false;\n      case 'f':\n      case 'v':\n      case 'is':\n        this.currentNode = undefined;\n        return true;\n      case 't':\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        } else {\n          this.currentNode = undefined;\n          return true;\n        }\n      case 'r':\n        this.model.value = this.model.value || {};\n        this.model.value.richText = this.model.value.richText || [];\n        this.model.value.richText.push(this.parser.model);\n        this.parser = undefined;\n        this.currentNode = undefined;\n        return true;\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        return false;\n    }\n  },\n\n  reconcile: function(model, options) {\n    var style = model.styleId && options.styles.getStyleModel(model.styleId);\n    if (style) {\n      model.style = style;\n    }\n    if (model.styleId !== undefined) {\n      model.styleId = undefined;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (typeof model.value === 'number') {\n          model.value = options.sharedStrings.getString(model.value);\n        }\n        if (model.value.richText) {\n          model.type = Enums.ValueType.RichText;\n        }\n        break;\n      case Enums.ValueType.Number:\n        if (style && utils.isDateFmt(style.numFmt)) {\n          model.type = Enums.ValueType.Date;\n          model.value = utils.excelToDate(model.value, options.date1904);\n        }\n        break;\n      case Enums.ValueType.Formula:\n        if ((model.result !== undefined) && style && utils.isDateFmt(style.numFmt)) {\n          model.result = utils.excelToDate(model.result, options.date1904);\n        }\n        if (model.sharedFormula) {\n          if (model.formula) {\n            options.formulae[model.si] = model;\n            delete model.sharedFormula;\n          } else {\n            model.sharedFormula = options.formulae[model.si].address;\n          }\n          delete model.si;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // look for hyperlink\n    var hyperlink = options.hyperlinkMap[model.address];\n    if (hyperlink) {\n      if (model.type === Enums.ValueType.Formula) {\n        model.text = model.result;\n        model.result = undefined;\n      } else {\n        model.text = model.value;\n        model.value = undefined;\n      }\n      model.type = Enums.ValueType.Hyperlink;\n      model.hyperlink = hyperlink;\n    }\n  }\n});\n"]}