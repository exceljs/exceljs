{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/merges.js"],"names":["_","require","Range","colCache","Enums","Merges","module","exports","merges","prototype","add","merge","master","expandToAddress","address","range","mergeCells","map","reconcile","rows","each","dimensions","decode","i","top","bottom","row","j","left","right","cell","cells","type","ValueType","Null","encodeAddress","Merge","tl","getMasterAddress","hash"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,IAAIC,QAAQ,2BAAR,CAAR;;AAEA,IAAIC,QAAQD,QAAQ,oBAAR,CAAZ;AACA,IAAIE,WAAWF,QAAQ,0BAAR,CAAf;AACA,IAAIG,QAAQH,QAAQ,oBAAR,CAAZ;;AAEA,IAAII,SAASC,OAAOC,OAAP,GAAiB,YAAW;AACvC;AACA,OAAKC,MAAL,GAAc,EAAd;AACD,CAHD;;AAKAH,OAAOI,SAAP,GAAmB;AACjBC,OAAK,aAASC,KAAT,EAAgB;AACnB;AACA,QAAI,KAAKH,MAAL,CAAYG,MAAMC,MAAlB,CAAJ,EAA+B;AAC7B,WAAKJ,MAAL,CAAYG,MAAMC,MAAlB,EAA0BC,eAA1B,CAA0CF,MAAMG,OAAhD;AACD,KAFD,MAEO;AACL,UAAIC,QAAQJ,MAAMC,MAAN,GAAe,GAAf,GAAqBD,MAAMG,OAAvC;AACA,WAAKN,MAAL,CAAYG,MAAMC,MAAlB,IAA4B,IAAIV,KAAJ,CAAUa,KAAV,CAA5B;AACD;AACF,GATgB;AAUjB,MAAIC,UAAJ,GAAiB;AACf,WAAOhB,EAAEiB,GAAF,CAAM,KAAKT,MAAX,EAAmB,UAASG,KAAT,EAAgB;AACxC,aAAOA,MAAMI,KAAb;AACD,KAFM,CAAP;AAGD,GAdgB;AAejBG,aAAW,mBAASF,UAAT,EAAqBG,IAArB,EAA2B;AACpC;AACAnB,MAAEoB,IAAF,CAAOJ,UAAP,EAAmB,UAASL,KAAT,EAAgB;AACjC,UAAIU,aAAalB,SAASmB,MAAT,CAAgBX,KAAhB,CAAjB;AACA,WAAK,IAAIY,IAAIF,WAAWG,GAAxB,EAA6BD,KAAKF,WAAWI,MAA7C,EAAqDF,GAArD,EAA0D;AACxD,YAAIG,MAAMP,KAAKI,IAAI,CAAT,CAAV;AACA,aAAK,IAAII,IAAIN,WAAWO,IAAxB,EAA8BD,KAAKN,WAAWQ,KAA9C,EAAqDF,GAArD,EAA0D;AACxD,cAAIG,OAAOJ,IAAIK,KAAJ,CAAUJ,IAAI,CAAd,CAAX;AACA,cAAI,CAACG,IAAL,EAAW;AACT;AACAJ,gBAAIK,KAAJ,CAAUJ,CAAV,IAAe;AACbK,oBAAM5B,MAAM6B,SAAN,CAAgBC,IADT;AAEbpB,uBAASX,SAASgC,aAAT,CAAuBZ,CAAvB,EAA0BI,CAA1B;AAFI,aAAf;AAID,WAND,MAMO,IAAIG,KAAKE,IAAL,KAAc5B,MAAM6B,SAAN,CAAgBG,KAAlC,EAAyC;AAC9CN,iBAAKlB,MAAL,GAAcS,WAAWgB,EAAzB;AACD;AACF;AACF;AACF,KAjBD;AAkBD,GAnCgB;AAoCjBC,oBAAkB,0BAASxB,OAAT,EAAkB;AAClC;AACA,QAAIC,QAAQ,KAAKwB,IAAL,CAAUzB,OAAV,CAAZ;AACA,WAAOC,SAASA,MAAMsB,EAAtB;AACD;AAxCgB,CAAnB","file":"merges.js","sourcesContent":["/**\n * Copyright (c) 2016 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar _ = require('../../../utils/under-dash');\n\nvar Range = require('../../../doc/range');\nvar colCache = require('../../../utils/col-cache');\nvar Enums = require('../../../doc/enums');\n\nvar Merges = module.exports = function() {\n  // optional mergeCells is array of ranges (like the xml)\n  this.merges = {};\n};\n\nMerges.prototype = {\n  add: function(merge) {\n    // merge is {address, master}\n    if (this.merges[merge.master]) {\n      this.merges[merge.master].expandToAddress(merge.address);\n    } else {\n      var range = merge.master + ':' + merge.address;\n      this.merges[merge.master] = new Range(range);\n    }\n  },\n  get mergeCells() {\n    return _.map(this.merges, function(merge) {\n      return merge.range;\n    });\n  },\n  reconcile: function(mergeCells, rows) {\n    // reconcile merge list with merge cells\n    _.each(mergeCells, function(merge) {\n      var dimensions = colCache.decode(merge);\n      for (var i = dimensions.top; i <= dimensions.bottom; i++) {\n        var row = rows[i - 1];\n        for (var j = dimensions.left; j <= dimensions.right; j++) {\n          var cell = row.cells[j - 1];\n          if (!cell) {\n            // nulls are not included in document - so if master cell has no value - add a null one here\n            row.cells[j] = {\n              type: Enums.ValueType.Null,\n              address: colCache.encodeAddress(i, j)\n            };\n          } else if (cell.type === Enums.ValueType.Merge) {\n            cell.master = dimensions.tl;\n          }\n        }\n      }\n    });\n  },\n  getMasterAddress: function(address) {\n    // if address has been merged, return its master's address. Assumes reconcile has been called\n    var range = this.hash[address];\n    return range && range.tl;\n  }\n};\n"]}