{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/outline-properties-xform.js"],"names":["utils","require","BaseXform","OutlinePropertiesXform","module","exports","isDefined","attr","inherits","tag","render","xmlStream","model","summaryBelow","summaryRight","leafNode","Number","undefined","parseOpen","node","name","attributes","Boolean","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,yBAAyBC,OAAOC,OAAP,GAAiB,YAAW,CAAE,CAA3D;;AAEA,IAAIC,YAAY,SAAZA,SAAY,CAACC,IAAD;AAAA,SAAU,OAAOA,IAAP,KAAgB,WAA1B;AAAA,CAAhB;;AAEAP,MAAMQ,QAAN,CAAeL,sBAAf,EAAuCD,SAAvC,EAAkD;;AAEhD,MAAIO,GAAJ,GAAU;AAAE,WAAO,WAAP;AAAqB,GAFe;;AAIhDC,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjC,QAAIA,UAAUN,UAAUM,MAAMC,YAAhB,KAAiCP,UAAUM,MAAME,YAAhB,CAA3C,CAAJ,EAA+E;AAC7EH,gBAAUI,QAAV,CAAmB,KAAKN,GAAxB,EAA6B;AAC3BI,sBAAcP,UAAUM,MAAMC,YAAhB,IAAgCG,OAAOJ,MAAMC,YAAb,CAAhC,GAA6DI,SADhD;AAE3BH,sBAAcR,UAAUM,MAAME,YAAhB,IAAgCE,OAAOJ,MAAME,YAAb,CAAhC,GAA6DG;AAFhD,OAA7B;AAIA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GAb+C;;AAehDC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAIA,KAAKC,IAAL,KAAc,KAAKX,GAAvB,EAA4B;AAC1B,WAAKG,KAAL,GAAa;AACXC,sBAAcP,UAAUa,KAAKE,UAAL,CAAgBR,YAA1B,IAA0CS,QAAQN,OAAOG,KAAKE,UAAL,CAAgBR,YAAvB,CAAR,CAA1C,GAA0FI,SAD7F;AAEXH,sBAAcR,UAAUa,KAAKE,UAAL,CAAgBP,YAA1B,IAA0CQ,QAAQN,OAAOG,KAAKE,UAAL,CAAgBP,YAAvB,CAAR,CAA1C,GAA0FG;AAF7F,OAAb;AAIA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GAxB+C;AAyBhDM,aAAW,qBAAW,CACrB,CA1B+C;AA2BhDC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AA7B+C,CAAlD","file":"outline-properties-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar OutlinePropertiesXform = module.exports = function() {};\n\nvar isDefined = (attr) => typeof attr !== 'undefined';\n\nutils.inherits(OutlinePropertiesXform, BaseXform, {\n\n  get tag() { return 'outlinePr'; },\n\n  render: function(xmlStream, model) {\n    if (model && (isDefined(model.summaryBelow) || isDefined(model.summaryRight))) {\n      xmlStream.leafNode(this.tag, {\n        summaryBelow: isDefined(model.summaryBelow) ? Number(model.summaryBelow) : undefined,\n        summaryRight: isDefined(model.summaryRight) ? Number(model.summaryRight) : undefined,\n      });\n      return true;\n    }\n    return false;\n  },\n\n  parseOpen: function(node) {\n    if (node.name === this.tag) {\n      this.model = {\n        summaryBelow: isDefined(node.attributes.summaryBelow) ? Boolean(Number(node.attributes.summaryBelow)) : undefined,\n        summaryRight: isDefined(node.attributes.summaryRight) ? Boolean(Number(node.attributes.summaryRight)) : undefined,\n      };\n      return true;\n    }\n    return false;\n  },\n  parseText: function() {\n  },\n  parseClose: function() {\n    return false;\n  }\n});\n"]}