{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/shared-strings-xform.js"],"names":["utils","require","XmlStream","BaseXform","SharedStringXform","SharedStringsXform","module","exports","model","values","count","hash","rich","inherits","sharedStringXform","_sharedStringXform","uniqueCount","length","getString","index","add","value","richText","addRichText","addText","undefined","push","xml","toXml","render","xmlStream","_values","openXml","StdDocAttributes","openNode","xmlns","sx","forEach","sharedString","closeNode","parseOpen","node","parser","name","Error","JSON","stringify","parseText","text","parseClose"],"mappings":"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","file":"shared-strings-xform.js","sourcesContent":["/**\n * Copyright (c) 2016 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar XmlStream = require('../../../utils/xml-stream');\nvar BaseXform = require('../base-xform');\nvar SharedStringXform = require('./shared-string-xform');\n\nvar SharedStringsXform = module.exports = function(model) {\n  this.model = model || {\n    values: [],\n    count: 0\n  };\n  this.hash = {};\n  this.rich = {};\n};\n\nutils.inherits(SharedStringsXform, BaseXform, {\n  get sharedStringXform() { return this._sharedStringXform || (this._sharedStringXform = new SharedStringXform()); },\n\n  get values() {\n    return this.model.values;\n  },\n  get uniqueCount() {\n    return this.model.values.length;\n  },\n  get count() {\n    return this.model.count;\n  },\n\n  getString: function(index) {\n    return this.model.values[index];\n  },\n\n  add: function(value) {\n    return value.richText ?\n      this.addRichText(value) :\n      this.addText(value);\n  },\n  addText: function(value) {\n    var index = this.hash[value];\n    if (index === undefined) {\n      index = this.hash[value] = this.model.values.length;\n      this.model.values.push(value);\n    }\n    this.model.count++;\n    return index;\n  },\n  addRichText: function(value) {\n    // TODO: add WeakMap here\n    var xml = this.sharedStringXform.toXml(value);\n    var index = this.rich[xml];\n    if (index === undefined) {\n      index = this.rich[xml] = this.model.values.length;\n      this.model.values.push(value);\n    }\n    this.model.count++;\n    return index;\n  },\n\n  // <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n  // <sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"<%=totalRefs%>\" uniqueCount=\"<%=count%>\">\n  //   <si><t><%=text%></t></si>\n  //   <si><r><rPr></rPr><t></t></r></si>\n  // </sst>\n\n  render: function(xmlStream, model) {\n    model = model || this._values;\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('sst', {\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n      count: model.count,\n      uniqueCount: model.values.length\n    });\n\n    var sx = this.sharedStringXform;\n    model.values.forEach(function(sharedString) {\n      sx.render(xmlStream, sharedString);\n    });\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'sst':\n        return true;\n      case 'si':\n        this.parser = this.sharedStringXform;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        throw new Error('Unexpected xml node in parseOpen: ' + JSON.stringify(node));\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.values.push(this.parser.model);\n        this.model.count++;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'sst':\n        return false;\n      default:\n        throw new Error('Unexpected xml node in parseClose: ' + name);\n    }\n  }\n});\n"]}