{"version":3,"sources":["../../../../../lib/xlsx/xform/style/border-xform.js"],"names":["utils","require","BaseXform","ColorXform","EdgeXform","name","map","color","inherits","tag","render","xmlStream","model","defaultColor","openNode","style","addAttribute","closeNode","parseOpen","node","parser","attributes","undefined","parseText","text","parseClose","validStyleValues","reduce","p","v","validStyle","value","BorderXform","module","exports","top","left","bottom","right","diagonal","up","down","add","edgeModel","edgeXform","Object","assign","reset","diagonalUp","diagonalDown","key","extensions"],"mappings":"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","file":"border-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar ColorXform = require('./color-xform');\n\nvar EdgeXform = function(name) {\n  this.name = name;\n  this.map = {\n    color: new ColorXform()\n  };\n};\n\nutils.inherits(EdgeXform, BaseXform, {\n  get tag() { return this.name; },\n\n  render: function(xmlStream, model, defaultColor) {\n    var color = (model && model.color) || defaultColor || this.defaultColor;\n    xmlStream.openNode(this.name);\n    if (model && model.style) {\n      xmlStream.addAttribute('style', model.style);\n      if (color) {\n        this.map.color.render(xmlStream, color);\n      }\n    }\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.name:\n        var style = node.attributes.style;\n        if (style) {\n          this.model = {\n            style: style\n          };\n        } else {\n          this.model = undefined;\n        }\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n\n    if (name === this.name) {\n      if (this.map.color.model) {\n        if (!this.model) {\n          this.model = {};\n        }\n        this.model.color = this.map.color.model;\n      }\n    }\n\n    return false;\n  },\n\n  validStyleValues: [\n    'thin',\n    'dotted',\n    'dashDot',\n    'hair',\n    'dashDotDot',\n    'slantDashDot',\n    'mediumDashed',\n    'mediumDashDotDot',\n    'mediumDashDot',\n    'medium',\n    'double',\n    'thick'\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\n  validStyle: function(value) {\n    return this.validStyleValues[value];\n  }\n});\n\n// Border encapsulates translation from border model to/from xlsx\nvar BorderXform = module.exports = function() {\n  this.map = {\n    top: new EdgeXform('top'),\n    left: new EdgeXform('left'),\n    bottom: new EdgeXform('bottom'),\n    right: new EdgeXform('right'),\n    diagonal: new EdgeXform('diagonal')\n  };\n};\n\nutils.inherits(BorderXform, BaseXform, {\n  render: function(xmlStream, model) {\n    var color = model.color;\n    xmlStream.openNode('border');\n    if (model.diagonal && model.diagonal.style) {\n      if (model.diagonal.up) {\n        xmlStream.addAttribute('diagonalUp', '1');\n      }\n      if (model.diagonal.down) {\n        xmlStream.addAttribute('diagonalDown', '1');\n      }\n    }\n    function add(edgeModel, edgeXform) {\n      if (edgeModel && !edgeModel.color && model.color) {\n        // don't mess with incoming models\n        edgeModel = Object.assign({}, edgeModel, {color: model.color});\n      }\n      edgeXform.render(xmlStream, edgeModel, color);\n    }\n    add(model.left, this.map.left);\n    add(model.right, this.map.right);\n    add(model.top, this.map.top);\n    add(model.bottom, this.map.bottom);\n    add(model.diagonal, this.map.diagonal);\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'border':\n        this.reset();\n        this.diagonalUp = !!node.attributes.diagonalUp;\n        this.diagonalDown = !!node.attributes.diagonalDown;\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    if (name === 'border') {\n      var model = this.model = {};\n      var add = function(key, edgeModel, extensions) {\n        if (edgeModel) {\n          if (extensions) {\n            Object.assign(edgeModel, extensions);\n          }\n          model[key] = edgeModel;\n        }\n      };\n      add('left', this.map.left.model);\n      add('right', this.map.right.model);\n      add('top', this.map.top.model);\n      add('bottom', this.map.bottom.model);\n      add('diagonal', this.map.diagonal.model, {up: this.diagonalUp, down: this.diagonalDown});\n    }\n    return false;\n  }\n});\n"]}