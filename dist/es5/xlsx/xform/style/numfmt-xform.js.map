{"version":3,"sources":["../../../../../lib/xlsx/xform/style/numfmt-xform.js"],"names":["_","require","utils","defaultNumFormats","BaseXform","hashDefaultFormats","hash","each","dnf","id","f","parseInt","defaultFmtHash","NumFmtXform","module","exports","formatCode","inherits","tag","getDefaultFmtId","getDefaultFmtCode","numFmtId","render","xmlStream","model","leafNode","parseOpen","node","name","attributes","replace","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,IAAIC,QAAQ,2BAAR,CAAR;AACA,IAAIC,QAAQD,QAAQ,sBAAR,CAAZ;AACA,IAAIE,oBAAoBF,QAAQ,yBAAR,CAAxB;;AAEA,IAAIG,YAAYH,QAAQ,eAAR,CAAhB;;AAGA,SAASI,kBAAT,GAA8B;AAC5B,MAAIC,OAAO,EAAX;AACAN,IAAEO,IAAF,CAAOJ,iBAAP,EAA0B,UAASK,GAAT,EAAcC,EAAd,EAAkB;AAC1C,QAAID,IAAIE,CAAR,EAAW;AACTJ,WAAKE,IAAIE,CAAT,IAAcC,SAASF,EAAT,EAAa,EAAb,CAAd;AACD;AACD;AACD,GALD;AAMA,SAAOH,IAAP;AACD;AACD,IAAIM,iBAAiBP,oBAArB;;AAGA;AACA,IAAIQ,cAAcC,OAAOC,OAAP,GAAiB,UAASN,EAAT,EAAaO,UAAb,EAAyB;AAC1D,OAAKP,EAAL,GAAUA,EAAV;AACA,OAAKO,UAAL,GAAkBA,UAAlB;AACD,CAHD;;AAMAd,MAAMe,QAAN,CAAeJ,WAAf,EAA4BT,SAA5B,EAAuC;;AAErC,MAAIc,GAAJ,GAAU;AAAE,WAAO,QAAP;AAAkB,GAFO;;AAIrCC,mBAAiB,yBAASH,UAAT,EAAqB;AACpC,WAAOJ,eAAeI,UAAf,CAAP;AACD,GANoC;AAOrCI,qBAAmB,2BAASC,QAAT,EAAmB;AACpC,WAAOlB,kBAAkBkB,QAAlB,KAA+BlB,kBAAkBkB,QAAlB,EAA4BX,CAAlE;AACD;AAToC,CAAvC,EAUG;AACDY,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,QAAnB,EAA6B,EAACJ,UAAUG,MAAMf,EAAjB,EAAqBO,YAAYQ,MAAMR,UAAvC,EAA7B;AACD,GAHA;AAIDU,aAAW,mBAASC,IAAT,EAAe;AACxB,YAAQA,KAAKC,IAAb;AACE,WAAK,QAAL;AACE,aAAKJ,KAAL,GAAa;AACXf,cAAIE,SAASgB,KAAKE,UAAL,CAAgBR,QAAzB,EAAmC,EAAnC,CADO;AAEXL,sBAAYW,KAAKE,UAAL,CAAgBb,UAAhB,CAA2Bc,OAA3B,CAAmC,UAAnC,EAA+C,IAA/C;AAFD,SAAb;AAIA,eAAO,IAAP;AACF;AACE,eAAO,KAAP;AARJ;AAUD,GAfA;AAgBDC,aAAW,qBAAW,CACrB,CAjBA;AAkBDC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AApBA,CAVH","file":"numfmt-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar _ = require('../../../utils/under-dash');\nvar utils = require('../../../utils/utils');\nvar defaultNumFormats = require('../../defaultnumformats');\n\nvar BaseXform = require('../base-xform');\n\n\nfunction hashDefaultFormats() {\n  var hash = {};\n  _.each(defaultNumFormats, function(dnf, id) {\n    if (dnf.f) {\n      hash[dnf.f] = parseInt(id, 10);\n    }\n    // at some point, add the other cultures here...\n  });\n  return hash;\n}\nvar defaultFmtHash = hashDefaultFormats();\n\n\n// NumFmt encapsulates translation between number format and xlsx\nvar NumFmtXform = module.exports = function(id, formatCode) {\n  this.id = id;\n  this.formatCode = formatCode;\n};\n\n\nutils.inherits(NumFmtXform, BaseXform, {\n\n  get tag() { return 'numFmt'; },\n\n  getDefaultFmtId: function(formatCode) {\n    return defaultFmtHash[formatCode];\n  },\n  getDefaultFmtCode: function(numFmtId) {\n    return defaultNumFormats[numFmtId] && defaultNumFormats[numFmtId].f;\n  }\n}, {\n  render: function(xmlStream, model) {\n    xmlStream.leafNode('numFmt', {numFmtId: model.id, formatCode: model.formatCode});\n  },\n  parseOpen: function(node) {\n    switch (node.name) {\n      case 'numFmt':\n        this.model = {\n          id: parseInt(node.attributes.numFmtId, 10),\n          formatCode: node.attributes.formatCode.replace(/[\\\\](.)/g, '$1')\n        };\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText: function() {\n  },\n  parseClose: function() {\n    return false;\n  }\n});\n"]}