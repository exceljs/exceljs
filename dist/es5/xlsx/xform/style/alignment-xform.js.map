{"version":3,"sources":["../../../../../lib/xlsx/xform/style/alignment-xform.js"],"names":["Enums","require","utils","BaseXform","validation","horizontalValues","reduce","p","v","horizontal","value","undefined","verticalValues","vertical","wrapText","shrinkToFit","textRotation","validInt","indent","Math","max","readingOrder","ReadingOrder","LeftToRight","RightToLeft","textRotationXform","toXml","tr","round","toModel","AlignmentXform","module","exports","inherits","tag","render","xmlStream","model","addRollback","openNode","isValid","add","name","addAttribute","closeNode","commit","rollback","parseOpen","node","valid","truthy","attributes","parseInt","parseText","parseClose"],"mappings":"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","file":"alignment-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar Enums = require('../../../doc/enums');\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar validation = {\n  horizontalValues: [\n    'left',\n    'center',\n    'right',\n    'fill',\n    'centerContinuous',\n    'distributed',\n    'justify'\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\n  horizontal: function(value) {\n    return this.horizontalValues[value] ? value : undefined;\n  },\n\n  verticalValues: [\n    'top',\n    'middle',\n    'bottom',\n    'distributed',\n    'justify'\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\n  vertical: function(value) {\n    if (value === 'middle') return 'center';\n    return this.verticalValues[value] ? value : undefined;\n  },\n  wrapText: function(value) {\n    return value ? true : undefined;\n  },\n  shrinkToFit: function(value) {\n    return value ? true : undefined;\n  },\n  textRotation: function(value) {\n    switch (value) {\n      case 'vertical':\n        return value;\n      default:\n        value = utils.validInt(value);\n        return (value >= -90) && (value <= 90) ? value : undefined;\n    }\n  },\n  indent: function(value) {\n    value = utils.validInt(value);\n    return Math.max(0, value);\n  },\n  readingOrder: function(value) {\n    switch (value) {\n      case 'ltr': return Enums.ReadingOrder.LeftToRight;\n      case 'rtl': return Enums.ReadingOrder.RightToLeft;\n      default: return undefined;\n    }\n  }\n};\n\nvar textRotationXform = {\n  toXml: function(textRotation) {\n    textRotation = validation.textRotation(textRotation);\n    if (textRotation) {\n      if (textRotation === 'vertical') {\n        return 255;\n      }\n\n      var tr = Math.round(textRotation);\n      if ((tr >= 0) && (tr <= 90)) {\n        return tr;\n      }\n\n      if ((tr < 0) && (tr >= -90)) {\n        return 90 - tr;\n      }\n    }\n    return undefined;\n  },\n  toModel: function(textRotation) {\n    var tr = utils.validInt(textRotation);\n    if (tr !== undefined) {\n      if (tr === 255) {\n        return 'vertical';\n      }\n      if ((tr >= 0) && (tr <= 90)) {\n        return tr;\n      }\n      if ((tr > 90) && (tr <= 180)) {\n        return 90 - tr;\n      }\n    }\n    return undefined;\n  }\n};\n\n// Alignment encapsulates translation from style.alignment model to/from xlsx\nvar AlignmentXform = module.exports = function() {\n};\n\nutils.inherits(AlignmentXform, BaseXform, {\n\n  get tag() { return 'alignment'; },\n\n  render: function(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('alignment');\n\n    var isValid = false;\n    function add(name, value) {\n      if (value) {\n        xmlStream.addAttribute(name, value);\n        isValid = true;\n      }\n    }\n    add('horizontal', validation.horizontal(model.horizontal));\n    add('vertical', validation.vertical(model.vertical));\n    add('wrapText', validation.wrapText(model.wrapText) ? '1' : false);\n    add('shrinkToFit', validation.shrinkToFit(model.shrinkToFit) ? '1' : false);\n    add('indent', validation.indent(model.indent));\n    add('textRotation', textRotationXform.toXml(model.textRotation));\n    add('readingOrder', validation.readingOrder(model.readingOrder));\n\n    xmlStream.closeNode();\n\n    if (isValid) {\n      xmlStream.commit();\n    } else {\n      xmlStream.rollback();\n    }\n  },\n  \n  parseOpen: function(node) {\n    var model = {};\n    \n    var valid = false;\n    function add(truthy, name, value) {\n      if (truthy) {\n        model[name] = value;\n        valid = true;\n      }\n    }\n    add(node.attributes.horizontal, 'horizontal', node.attributes.horizontal);\n    add(node.attributes.vertical, 'vertical', node.attributes.vertical === 'center' ? 'middle' : node.attributes.vertical);\n    add(node.attributes.wrapText, 'wrapText', !!node.attributes.wrapText);\n    add(node.attributes.shrinkToFit, 'shrinkToFit', !!node.attributes.shrinkToFit);\n    add(node.attributes.indent, 'indent', parseInt(node.attributes.indent, 10));\n    add(node.attributes.textRotation, 'textRotation', textRotationXform.toModel(node.attributes.textRotation));\n    add(node.attributes.readingOrder, 'readingOrder', node.attributes.readingOrder === '2' ? 'rtl' : 'ltr');\n    \n    this.model = valid ? model : null;\n  },\n  \n  parseText: function() {\n  },\n  parseClose: function() {\n    return false;\n  }\n});\n"]}