{"version":3,"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"names":["utils","require","BaseXform","ColorXform","StopXform","map","color","inherits","tag","render","xmlStream","model","openNode","addAttribute","position","closeNode","parseOpen","node","parser","name","parseFloat","attributes","parseText","parseClose","undefined","PatternFillXform","fgColor","bgColor","pattern","type","patternType","text","GradientFillXform","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","module","exports","patternFill","gradientFill","addRollback","rollback","commit","validPatternValues","reduce","p","v","validStyle","value","validStyleValues"],"mappings":"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","file":"fill-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar ColorXform = require('./color-xform');\n\nvar StopXform = function() {\n  this.map = {\n    color: new ColorXform()\n  };\n};\n\nutils.inherits(StopXform, BaseXform, {\n\n  get tag() { return 'stop'; },\n\n  render: function(xmlStream, model) {\n    xmlStream.openNode('stop');\n    xmlStream.addAttribute('position', model.position);\n    this.map.color.render(xmlStream, model.color);\n    xmlStream.closeNode();\n  },\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'stop':\n        this.model = {\n          position: parseFloat(node.attributes.position)\n        };\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText: function() {\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.color = this.parser.model;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n});\n\nvar PatternFillXform = function() {\n  this.map = {\n    fgColor: new ColorXform('fgColor'),\n    bgColor: new ColorXform('bgColor')\n  };\n};\nutils.inherits(PatternFillXform, BaseXform, {\n\n  get name() { return 'pattern'; },\n  get tag() { return 'patternFill'; },\n\n  render: function(xmlStream, model) {\n    xmlStream.openNode('patternFill');\n    xmlStream.addAttribute('patternType', model.pattern);\n    if (model.fgColor) {\n      this.map.fgColor.render(xmlStream, model.fgColor);\n    }\n    if (model.bgColor) {\n      this.map.bgColor.render(xmlStream, model.bgColor);\n    }\n    xmlStream.closeNode();\n  },\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'patternFill':\n        this.model = {\n            type: 'pattern',\n            pattern: node.attributes.patternType\n          };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (this.parser.model) {\n          this.model[name] = this.parser.model;\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n});\n\nvar GradientFillXform = function() {\n  this.map = {\n    stop: new StopXform()\n  };\n  // if (model) {\n  //   this.gradient = model.gradient;\n  //   if (model.center) {\n  //     this.center = model.center;\n  //   }\n  //   if (model.degree !== undefined) {\n  //     this.degree = model.degree;\n  //   }\n  //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\n  // } else {\n  //   this.stops = [];\n  // }\n};\nutils.inherits(GradientFillXform, BaseXform, {\n  get name() { return 'gradient'; },\n  get tag() { return 'gradientFill'; },\n  \n  render: function(xmlStream, model) {\n    xmlStream.openNode('gradientFill');\n    switch (model.gradient) {\n      case 'angle':\n        xmlStream.addAttribute('degree', model.degree);\n        break;\n      case 'path':\n        xmlStream.addAttribute('type', 'path');\n        if (model.center.left) {\n          xmlStream.addAttribute('left', model.center.left);\n          if (model.center.right === undefined) {\n            xmlStream.addAttribute('right', model.center.left);\n          }\n        }\n        if (model.center.right) {\n          xmlStream.addAttribute('right', model.center.right);\n        }\n        if (model.center.top) {\n          xmlStream.addAttribute('top', model.center.top);\n          if (model.center.bottom === undefined) {\n            xmlStream.addAttribute('bottom', model.center.top);\n          }\n        }\n        if (model.center.bottom) {\n          xmlStream.addAttribute('bottom', model.center.bottom);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    var stopXform = this.map.stop;\n    model.stops.forEach(function(stopModel) {\n      stopXform.render(xmlStream, stopModel);\n    });\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'gradientFill':\n        var model = this.model = {\n          stops: []\n        };\n        if (node.attributes.degree) {\n          model.gradient = 'angle';\n          model.degree = parseInt(node.attributes.degree, 10);\n        } else if (node.attributes.type === 'path') {\n          model.gradient = 'path';\n          model.center = {\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0\n          };\n          if (node.attributes.right !== node.attributes.left) {\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\n          }\n          if (node.attributes.bottom !== node.attributes.top) {\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\n          }\n        }\n        return true;\n\n      case 'stop':\n        this.parser = this.map.stop;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.stops.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n});\n\n// Fill encapsulates translation from fill model to/from xlsx\nvar FillXform = module.exports = function() {\n  this.map = {\n    patternFill: new PatternFillXform(),\n    gradientFill: new GradientFillXform()\n  };\n};\n\nutils.inherits(FillXform, BaseXform, {\n  StopXform: StopXform,\n  PatternFillXform: PatternFillXform,\n  GradientFillXform: GradientFillXform\n}, {\n  get tag() { return 'fill'; },\n\n  render: function(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('fill');\n    switch (model.type) {\n      case 'pattern':\n        this.map.patternFill.render(xmlStream, model);\n        break;\n      case 'gradient':\n        this.map.gradientFill.render(xmlStream, model);\n        break;\n      default:\n        xmlStream.rollback();\n        return;\n    }\n    xmlStream.closeNode();\n    xmlStream.commit();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'fill':\n        this.model = {};\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  },\n\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model = this.parser.model;\n        this.model.type = this.parser.name;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  },\n\n  validPatternValues: [\n    'none',\n    'solid',\n    'darkVertical',\n    'darkGray',\n    'mediumGray',\n    'lightGray',\n    'gray125',\n    'gray0625',\n    'darkHorizontal',\n    'darkVertical',\n    'darkDown',\n    'darkUp',\n    'darkGrid',\n    'darkTrellis',\n    'lightHorizontal',\n    'lightVertical',\n    'lightDown',\n    'lightUp',\n    'lightGrid',\n    'lightTrellis',\n    'lightGrid'\n  ].reduce((p, v) => { p[v] = true; return p; }, {}),\n  validStyle: function(value) {\n    return this.validStyleValues[value];\n  }\n});\n"]}