{"version":3,"sources":["../../../../../lib/xlsx/xform/style/underline-xform.js"],"names":["utils","require","BaseXform","UnderlineXform","module","exports","model","Attributes","single","double","val","singleAccounting","doubleAccounting","inherits","tag","render","xmlStream","leafNode","attr","parseOpen","node","name","attributes","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,iBAAiBC,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AACpD,OAAKA,KAAL,GAAaA,KAAb;AACD,CAFD;;AAIAH,eAAeI,UAAf,GAA4B;AAC1BC,UAAQ,EADkB;AAE1BC,UAAQ,EAAEC,KAAK,QAAP,EAFkB;AAG1BC,oBAAkB,EAAED,KAAK,kBAAP,EAHQ;AAI1BE,oBAAkB,EAAEF,KAAK,kBAAP;AAJQ,CAA5B;;AAOAV,MAAMa,QAAN,CAAeV,cAAf,EAA+BD,SAA/B,EAA0C;;AAExC,MAAIY,GAAJ,GAAU;AAAE,WAAO,GAAP;AAAa,GAFe;;AAIxCC,UAAQ,gBAASC,SAAT,EAAoBV,KAApB,EAA2B;AACjCA,YAAQA,SAAS,KAAKA,KAAtB;;AAEA,QAAIA,UAAU,IAAd,EAAoB;AAClBU,gBAAUC,QAAV,CAAmB,GAAnB;AACD,KAFD,MAEO;AACL,UAAIC,OAAOf,eAAeI,UAAf,CAA0BD,KAA1B,CAAX;AACA,UAAIY,IAAJ,EAAU;AACRF,kBAAUC,QAAV,CAAmB,GAAnB,EAAwBC,IAAxB;AACD;AACF;AACF,GAfuC;;AAiBxCC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAIA,KAAKC,IAAL,KAAc,GAAlB,EAAuB;AACrB,WAAKf,KAAL,GAAac,KAAKE,UAAL,CAAgBZ,GAAhB,IAAuB,IAApC;AACD;AACF,GArBuC;AAsBxCa,aAAW,qBAAW,CACrB,CAvBuC;AAwBxCC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AA1BuC,CAA1C","file":"underline-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar UnderlineXform = module.exports = function(model) {\n  this.model = model;\n};\n\nUnderlineXform.Attributes = {\n  single: {},\n  double: { val: 'double' },\n  singleAccounting: { val: 'singleAccounting' },\n  doubleAccounting: { val: 'doubleAccounting' }\n};\n\nutils.inherits(UnderlineXform, BaseXform, {\n\n  get tag() { return 'u'; },\n\n  render: function(xmlStream, model) {\n    model = model || this.model;\n\n    if (model === true) {\n      xmlStream.leafNode('u');\n    } else {\n      var attr = UnderlineXform.Attributes[model];\n      if (attr) {\n        xmlStream.leafNode('u', attr);\n      }\n    }\n  },\n\n  parseOpen: function(node) {\n    if (node.name === 'u') {\n      this.model = node.attributes.val || true;\n    }\n  },\n  parseText: function() {\n  },\n  parseClose: function() {\n    return false;\n  }\n});\n"]}